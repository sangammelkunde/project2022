{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/AuthContainer/forgot-password/forgot-password.component.ts","webpack:///src/app/AuthContainer/forgot-password/forgot-password.component.html","webpack:///src/app/AuthContainer/login-page/login-page.component.ts","webpack:///src/app/AuthContainer/login-page/login-page.component.html","webpack:///src/app/AuthContainer/registration-page/registration-page.component.ts","webpack:///src/app/AuthContainer/registration-page/registration-page.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error-page/error-page.component.ts","webpack:///src/app/error-page/error-page.component.html","webpack:///src/app/model/UserModel.model.ts","webpack:///src/app/model/authentication-request.model.ts","webpack:///src/app/model/newpassword.model.ts","webpack:///src/app/model/reply.model.ts","webpack:///src/app/model/tweet.model.ts","webpack:///src/app/model/tweetUpdate.model.ts","webpack:///src/app/services/auth-guard/auth-guard.service.ts","webpack:///src/app/services/tweets/tweets.service.ts","webpack:///src/app/services/user-login/user-auth.service.ts","webpack:///src/app/services/user-registration/user-registration.service.ts","webpack:///src/app/user-activity-container/footer/footer.component.ts","webpack:///src/app/user-activity-container/footer/footer.component.html","webpack:///src/app/user-activity-container/home/home.component.ts","webpack:///src/app/user-activity-container/home/home.component.html","webpack:///src/app/user-activity-container/nav-bar/nav-bar.component.ts","webpack:///src/app/user-activity-container/nav-bar/nav-bar.component.html","webpack:///src/app/user-activity-container/post-tweets-page/post-tweets-page.component.ts","webpack:///src/app/user-activity-container/post-tweets-page/post-tweets-page.component.html","webpack:///src/app/user-activity-container/user-profile/user-profile.component.ts","webpack:///src/app/user-activity-container/user-profile/user-profile.component.html","webpack:///src/app/user-activity-container/user-scroll-top/scroll-top.component.ts","webpack:///src/app/user-activity-container/user-scroll-top/scroll-top.component.html","webpack:///src/app/user-activity-container/view-users-page/view-users-page.component.ts","webpack:///src/app/user-activity-container/view-users-page/view-users-page.component.html","webpack:///src/app/user-activity-container/view-users-tweets/view-users-tweets.component.ts","webpack:///src/app/user-activity-container/view-users-tweets/view-users-tweets.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ForgotPasswordComponent","router","formBuilder","forgotService","emailValid","prePasswordCheck","passwordValidation","passwordLength","showElement","phoneValidation","phoneValidationIsNan","noMMatching","myFormGroup","group","required","email","test","value","length","password","rePassword","number","mobilePattern","match","Number","isNaN","parseInt","controls","username","newPassword","contact","forgotPassword","subscribe","response","setTimeout","navigate","bind","reset","failureData","alert","forgot","emailValidation","phoneNumberValidaton","checkPrePassword","checkPassword","selector","templateUrl","styleUrls","LoginPageComponent","loginService","nullValueErrorMessage","invalid","userCredentials","login","successData","sessionStorage","setItem","firstName","lastName","passwordEmpty","RegistrationPageComponent","formbuilder","userRegistrationService","sussesfullyRegistered","emailNotAvailable","userDate","user","addNewUser","getAllUsers","register","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","ErrorPageComponent","UserModel","contactNum","AuthenticationRequest","NewPassword","Reply","comment","Tweet","tweetText","tweetDate","TweetUpdate","tweetId","AuthGuardService","route","state","isUserLoggedIn","getItem","providedIn","API_URL","Search_URL","Search_User_URL","TweetsService","http","userName","headers","get","name","reply","cmt","post","pipe","put","text","tweetUpdate","tweet","Forgot_URL","UserAuthService","details","Users_URL","UserRegistrationService","FooterComponent","copyright_name","HomeComponent","activeRoute","tweetService","today","Date","todaysDataTime","clickedReplyButton","enablePostButton","noTweets","likedTweetPopup","disLikedTweetPopup","likeTweet","getAllTweets","disLikeTweet","index","replyTweet","console","log","searchedUserTweets","currentUser","returnedTweets","tweets","NavBarComponent","clear","toLocaleUpperCase","logout","PostTweetsPageComponent","postTweetService","tweetLengthExceeded","tagLengthExceeded","showTweetLength","showTagLength","showTweetRed","showTagRed","tweetEmpty","newTweet","postTweet","remainingTweetLength","tweetLengthValidationMethod","UserProfileComponent","locationStrategy","enableLikeButton","showModel","deleteTweetPopup","updateTweetPopup","loggedInUser","getAllTweetsOfUser","res","filter","userDetails","userDetail","deleteTweet","editTweet","singleTweet","tweetTex","tweetOfUser","updateTweet","showTweets","closeUpdateTweet","history","pushState","location","href","onPopState","siteUrl","window","open","preventBackButton","ScrollTopComponent","document","pageYOffset","documentElement","scrollTop","body","windowScrolled","smoothscroll","currentScroll","requestAnimationFrame","scrollTo","scrollToTop","Document","ViewUsersPageComponent","userService","showSearchedText","flag","enableButtonForSearch","noUsersToDisplay","enteredUserName","searchUser","userModel","includes","searchedText","search","enableSearchButton","ViewUsersTweetsComponent","params","parameter","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserAuthService } from 'src/app/services/user-login/user-auth.service';\nimport { UserRegistrationService } from 'src/app/services/user-registration/user-registration.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  \n  myFormGroup : FormGroup;\n  emailValid : boolean = false;\n  prePasswordCheck : boolean = false;\n  passwordValidation :boolean = false;\n  passwordLength : boolean = false;\n  showElement : boolean = false;\n  phoneValidation : boolean = false;\n  phoneValidationIsNan : boolean = false;\n  noMMatching : boolean = false;\n\n  constructor(public router : Router , formBuilder : FormBuilder, public forgotService : UserAuthService) {\n    this.myFormGroup=formBuilder.group({\n      \"email\" : new FormControl(\"\",[Validators.required]),\n      \"contact\" : new FormControl(\"\", [Validators.required]),\n      \"password\" : new FormControl(\"\", [Validators.required]),\n      \"rePassword\" : new FormControl(\"\", [Validators.required])\n    })\n   }\n\n\n  //Validation of email\n\n   emailValidation(email : HTMLInputElement){\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value))\n    {\n      this.emailValid = false;\n      this.noMMatching = false;\n      // console.log(this.emailValid)\n    }\n    else{\n  \n      this.emailValid = true;\n\n      // console.log(this.emailValid)\n    }\n    if(email.value.length==0){\n      this.emailValid = false\n    }\n  }  \n\n  \n  \n  //check if password and repassword are same\n\n   checkPassword(password : HTMLInputElement,rePassword : HTMLInputElement){\n    \n    // console.log(password.value,rePassword.value);\n    if(password.value.length!=0){\n        this.prePasswordCheck = false;\n          if(password.value == rePassword.value || rePassword.value.length==0){\n              this.passwordValidation = false;\n            }else{\n                this.passwordValidation = true;\n            }\n          }else{\n                this.prePasswordCheck = true;\n    }\n    if(rePassword.value.length==0){\n      this.prePasswordCheck = false;\n    }\n    if(this.prePasswordCheck){\n      rePassword.value=\"\";\n    }\n  }\n\n  // Check prePassword\n  checkPrePassword(password : HTMLInputElement ){\n    if(password.value.length>=6 && password.value.length<=12){\n      this.passwordLength = false;\n      }\n      else{\n        this.passwordLength = true;\n      }\n    if(password.value.length!=0){\n      this.prePasswordCheck = false;\n    }else{\n      this.passwordLength = false;\n    }\n  } \n  \n  // phone number validation\n  phoneNumberValidaton(number : HTMLInputElement){\n    let mobilePattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\n    if(number.value.match(mobilePattern) || number.value.length==0){\n      \n      this.phoneValidation = false;\n    }else{\n      this.phoneValidation = true;\n    }\n    if(!Number.isNaN(parseInt(number.value)) || number.value.length==0 ){\n      this.phoneValidationIsNan = false;\n      this.noMMatching = false;\n    }\n    else{\n      this.phoneValidationIsNan = true;\n    }\n  }\n\n  // for updating the password\n  forgot(){\n    if(this.emailValid == false &&\n       this.passwordValidation == false &&\n       this.phoneValidation == false &&\n       this.myFormGroup.controls['email'].value.length!=0 &&\n       this.myFormGroup.controls['password'].value.length!=0 &&\n       this.myFormGroup.controls['rePassword'].value.length!=0 &&\n       this.myFormGroup.controls['contact'].value.length!=0){\n      let username = this.myFormGroup.controls['email'].value;\n      let newPassword = this.myFormGroup.controls['password'].value;\n      let contact = this.myFormGroup.controls['contact'].value;\n      this.forgotService.forgotPassword(username,newPassword,contact)\n      .subscribe((response)=>{\n        //  console.log(response);\n        this.showElement = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.showElement = false;\n          this.router.navigate(['/login'])\n        }.bind(this), 3000);\n        this.myFormGroup.controls['email'].reset()\n        this.myFormGroup.controls['password'].reset()\n        this.myFormGroup.controls['rePassword'].reset()   \n      },\n      // failure function\n      failureData => {\n        this.noMMatching = true;\n        // alert(\"Error Occurred !! Please Try Again\")\n        //  console.log(failureData);\n      })}else{\n        alert(\"Enter Valid Details!!\")\n      }\n    }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"logo\"> <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\" twitter-logo\">\n    </div>\n    <div class=\"text-center mt-2 name\"> Update-Password </div>\n    <div *ngIf=\"showElement\" class=\" msg mt-1\">\n        <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>Password Updated!</strong>\n        </div>\n    </div>\n    <form class=\"p-3 mt-1 formgroup\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"forgot()\">\n\n        <label for=\"email\">Email: </label>\n        <div class=\"form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"text\" name=\"email\" id=\"email\" required [formControl]=\"myFormGroup.controls['email']\" [ngClass]=\"{'warningOutline' : emailValid}\" (keyup)=\"emailValidation(email)\" #email placeholder=\"Enter your Email\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"emailValid\">Enter Valid Email Id</small>\n            </div>\n        </div>\n\n        <label for=\"contact\">Contact number: </label>\n        <div class=\" form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"text\" name=\"contact\" id=\"contact\" required [formControl]=\"myFormGroup.controls['contact']\" (keyup)=\"phoneNumberValidaton(contact)\" [ngClass]=\"{'warningOutline' : phoneValidation}\" #contact placeholder=\"Enter your contact number\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"phoneValidation\">Enter Valid PhoneNumber</small>\n            </div>\n            <div class=\"text-danger\"> <small *ngIf=\"phoneValidationIsNan\">Enter numbers only!</small></div>\n        </div>\n\n\n        <label for=\"password\">New Password: </label>\n        <div class=\" form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"password\" name=\"password\" id=\"password\" required [formControl]=\"myFormGroup.controls['password']\" (keyup)=\"checkPrePassword(password)\" #password placeholder=\"Enter new password\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordLength\">password length must be between 6 to 12 characters </small>\n            </div>\n        </div>\n\n\n        <label for=\"rePassword\">Confirm new password: </label>\n        <div class=\" form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"password\" name=\"rePassword\" id=\"repassword\" required [formControl]=\"myFormGroup.controls['rePassword']\" type=\"password\" [ngClass]=\"{'warningOutline' : passwordValidation}\" (keyup)=\"checkPassword(password,rePassword)\"\n                #rePassword placeholder=\"Enter password again\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordValidation\">Password didn't matched</small>\n            </div>\n            <div class=\"text-danger\"> <small *ngIf=\"prePasswordCheck\">Enter password first</small></div>\n        </div>\n\n\n        <button class=\"btn mt-3\">Update Password</button>\n        <div class=\"text-center mt-3\">\n            <small *ngIf=\"noMMatching\" class=\"text-danger\">Entered Email Id and Contact Number didn't match !</small>\n        </div>\n    </form>\n    <div class=\"text-center fs-6\"> <a [routerLink]=\"['/login']\"> back to login</a> or <a [routerLink]=\"['/register']\">Sign up</a> </div>\n</div>","\nimport { LocationStrategy } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationRequest } from 'src/app/model/authentication-request.model';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { UserAuthService } from 'src/app/services/user-login/user-auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  myFormGroup : FormGroup;\n  emailValid : boolean = false;\n  nullValueErrorMessage : boolean = false;\n  data : Array<UserModel>;\n  invalid : boolean = false;\n  \n  constructor(formBuilder : FormBuilder , public router : Router , public  loginService : UserAuthService ) {\n    this.myFormGroup=formBuilder.group({\n      \"email\" : new FormControl(\"\",[Validators.required, Validators.email]),\n      \"password\" : new FormControl(\"\", [Validators.required])\n    })\n   }\n\n  \n\n\n\n  \n   emailValidation(email : HTMLInputElement){\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value))\n    {\n      this.emailValid = false;\n      // console.log(this.emailValid)\n    }\n    else{\n  \n      this.emailValid = true;\n      // console.log(this.emailValid)\n    }\n    if(email.value.length==0){\n      this.emailValid = false\n    }else{\n      this.nullValueErrorMessage = false;\n    }\n  }  \n\n  passwordEmpty(){\n    if(this.myFormGroup.controls['password'].value.length!=0){\n      this.nullValueErrorMessage = false;\n    }\n    else{\n      this.nullValueErrorMessage = true;\n    }\n  }\n\n  //login of user method\n  login(){\n    if(this.myFormGroup.controls['email'].value.length!=0 && this.myFormGroup.controls['password'].value.length!=0){\n  \n    let userCredentials = new AuthenticationRequest(this.myFormGroup.controls['email'].value,this.myFormGroup.controls['password'].value)\n    this.loginService.login(userCredentials).subscribe((successData)=>{\n      // console.log(\"succ\");\n      // console.log(\"LOGIN SUCCESS\");\n      sessionStorage.setItem(\"user\",userCredentials.username);\n      sessionStorage.setItem(\"firstName\",successData.firstName);\n      sessionStorage.setItem(\"lastName\",successData.lastName);\n      sessionStorage.setItem(\"password\",successData.password);\n      this.router.navigate(['/home']);\n      // console.log(successData)\n    },failureData => {\n      // console.log(\"fail\");\n      this.invalid = true;\n      // console.log(failureData);\n    })\n\n    this.nullValueErrorMessage = false;\n  }\n  else{\n    this.nullValueErrorMessage = true;\n  }\n}\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"logo\"> <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\" twitter-logo\">\n    </div>\n    <div class=\"text-center mt-4 name\"> Login </div>\n    <form class=\"p-3 mt-3\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"login()\">\n\n        <label for=\"email\">Email: </label>\n        <div class=\"form-field d-flex flex-column\">\n            <input class=\"custom-field form-control\" type=\"text\" name=\"email\" id=\"email\" placeholder=\"Enter your Email\" required [formControl]=\"myFormGroup.controls['email']\" [ngClass]=\"{'warningOutline' : emailValid}\" (keyup)=\"emailValidation(email)\" #email>\n        </div>\n\n        <label for=\"password\">Password: </label>\n        <div class=\"form-field d-flex flex-column\">\n            <input class=\"custom-field form-control\" type=\"password\" name=\"password \" id=\"password\" placeholder=\"Enter your password\" required [formControl]=\"myFormGroup.controls['password']\" #password (keyup)=\"passwordEmpty()\">\n        </div>\n        <button class=\"btn form-group mt-3\">Login</button>\n\n        <div class=\"text-danger text-center mt-3 \">\n            <small *ngIf=\"invalid \">Invalid <b> Credentials!</b> </small>\n        </div>\n        <div class=\"text-danger text-center mt-3 \">\n            <small *ngIf=\"nullValueErrorMessage \">Enter both <b>Email</b> and <b>Password</b> </small>\n        </div>\n    </form>\n    <div class=\"text-center \"> <a [routerLink]=\"[ '/forgot'] \">Forget password?</a> or <a [routerLink]=\"[ '/register'] \">Sign up</a> </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Email } from 'src/app/model/email.model';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { UserRegistrationService } from 'src/app/services/user-registration/user-registration.service';\n\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.css']\n})\nexport class RegistrationPageComponent implements OnInit {\n\n  myFormGroup: FormGroup;\n  passwordValidation: boolean = false;\n  prePasswordCheck: boolean = false;\n  passwordLength: boolean = false;\n  emailValid: boolean = false;\n  //contactValid : boolean = false;\n  phoneValidation: boolean = false;\n  phoneValidationIsNan: boolean = false;\n  sussesfullyRegistered: boolean = false;\n  showElement: boolean = false;\n  userDate: Date;\n  emailNotAvailable: boolean = false;\n\n  usersList: Array<UserModel>\n  email: Array<Email>\n\n  constructor(formbuilder: FormBuilder, public router: Router, public userRegistrationService: UserRegistrationService) {\n    this.myFormGroup = formbuilder.group({\n      \"firstName\": new FormControl(\"\", [Validators.required]),\n      \"lastName\": new FormControl(\"\", [Validators.required]),\n      \"email\": new FormControl(\"\", [Validators.required]),\n      \"password\": new FormControl(\"\", [Validators.required]),\n      \"rePassword\": new FormControl(\"\", [Validators.required]),\n      \"date\": new FormControl(\"\", Validators.required),\n      \"contact\": new FormControl(\"\", Validators.required)\n    })\n  }\n\n\n\n\n\n\n  //check if password and repassword are same\n\n  checkPassword(password: HTMLInputElement, rePassword: HTMLInputElement) {\n    if (password.value.length != 0) {\n      this.prePasswordCheck = false;\n      if (password.value == rePassword.value || rePassword.value.length == 0) {\n        this.passwordValidation = false;\n      } else {\n        this.passwordValidation = true;\n      }\n    } else {\n      this.prePasswordCheck = true;\n    }\n    if (rePassword.value.length == 0) {\n      this.prePasswordCheck = false;\n    }\n    if (this.prePasswordCheck) {\n      rePassword.value = \"\";\n    }\n  }\n\n  // Check prePassword\n  checkPrePassword(password: HTMLInputElement) {\n    if (password.value.length >= 6 && password.value.length <= 12) {\n      this.passwordLength = false;\n    }\n    else {\n      this.passwordLength = true;\n    }\n    if (password.value.length != 0) {\n      this.prePasswordCheck = false;\n    } else {\n      this.passwordLength = false;\n    }\n  }\n\n  //Email Validation\n\n  emailValidation(email: HTMLInputElement) {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value)) {\n      this.emailValid = false;\n    }\n    else {\n      this.emailValid = true;\n    }\n    if (email.value.length == 0) {\n      this.emailValid = false\n    }\n  }\n\n  // validate Phone number\n  phoneNumberValidaton(number: HTMLInputElement) {\n    let mobilePattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\n    if (number.value.match(mobilePattern) || number.value.length == 0) {\n      this.phoneValidation = false;\n    } else {\n      this.phoneValidation = true;\n    }\n    if (!Number.isNaN(parseInt(number.value)) || number.value.length == 0) {\n      this.phoneValidationIsNan = false;\n    }\n    else {\n      this.phoneValidationIsNan = true;\n    }\n  }\n\n\n  //change date format to YYYY-MM-DD\n  checkDate() {\n    // console.log(\"called check date\")\n    this.userDate = this.myFormGroup.controls['date'].value;\n    // console.log(this.userDate);\n  }\n\n\n\n\n\n  //registering the user\n\n  register() {\n    // console.log(this.emailValid,this.passwordLength,this.passwordValidation,this.phoneValidation);\n    if (!this.emailValid &&\n      !this.passwordLength &&\n      !this.passwordValidation &&\n      !this.phoneValidation) {\n\n      if (this.myFormGroup.controls['firstName'].value.length != 0 &&\n        this.myFormGroup.controls['lastName'].value.length != 0 &&\n        this.myFormGroup.controls['email'].value.length != 0 &&\n        this.myFormGroup.controls['password'].value.length != 0 &&\n        this.myFormGroup.controls['rePassword'].value.length != 0 &&\n        this.myFormGroup.controls['contact'].value.length != 0) {\n\n        let user = new UserModel(\n          this.myFormGroup.controls['email'].value,\n          this.myFormGroup.controls['firstName'].value,\n          this.myFormGroup.controls['lastName'].value,\n          this.myFormGroup.controls['email'].value,\n          this.myFormGroup.controls['password'].value,\n          this.myFormGroup.controls['contact'].value,\n        )\n\n        this.userRegistrationService.addNewUser(user).subscribe((response) => {\n          // console.log(response);\n          // console.log(\"register user\");\n          this.myFormGroup.controls['firstName'].reset();\n          this.myFormGroup.controls['lastName'].reset();\n          this.myFormGroup.controls['email'].reset();\n          this.myFormGroup.controls['password'].reset();\n          this.myFormGroup.controls['rePassword'].reset();\n          this.myFormGroup.controls['contact'].reset();\n          this.showElement = true;\n          setTimeout(function () {\n            // console.log('hide');\n            this.showElement = false;\n            this.router.navigate(['/login'])\n          }.bind(this), 3000);\n        },\n          // failure function\n          failureData => {\n            // console.log(failureData);\n            //alert(\"email alredy taken\")\n            this.emailNotAvailable = true;\n            setTimeout(function () {\n              // console.log('hide');\n              this.emailNotAvailable = false;\n            }.bind(this), 3000);\n          });\n      }\n      else {\n        alert(\"Required every Field\");\n      }\n    } else {\n      alert(\"enter valid details\");\n    }\n\n  }\n\n\n\n  ngOnInit(): void {\n    this.userRegistrationService.getAllUsers();\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"logo\"> <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\"\">\n    </div>\n    <div class=\"text-center mt-3 name\"> Register </div>\n    <form class=\"p-3 mt-2 formgroup\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"register()\">\n        <!-- REGISTERED SUCCESSFULLY DIV -->\n        <div class=\"col-lg-3\">\n            <div *ngIf=\"showElement\" class=\"msg mt-1\">\n                <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                    <strong>Registered successfully!</strong>\n                </div>\n            </div>\n        </div>\n        <!-- REGISTERED SUCCESSFULLY DIV -->\n\n        <label for=\"firstName\">First Name: </label>\n        <div class=\"form-field d-flex flex-column  mb-2\">\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" class=\"mb-2 form-control shadow-none\" [formControl]=\"myFormGroup.controls['firstName']\" #firstName placeholder=\"Enter your firstName\">\n        </div>\n\n\n        <label for=\"lastName\">Last Name: </label>\n        <div class=\"form-field d-flex flex-column mb-2\">\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['lastName']\" #lastName placeholder=\"Enter your last name\">\n        </div>\n\n\n        <label for=\"email\">Email: </label>\n        <div class=\"form-field d-flex flex-column  mb-2\">\n            <input type=\"text\" name=\"email\" id=\"userEmail\" class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['email']\" [ngClass]=\"{'warningOutline' : emailValid,'warningOutline1' : emailNotAvailable}\" #email (keyup)=\"emailValidation(email)\"\n                placeholder=\"Enter your email address\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"emailValid\">Enter Valid Email Id</small>\n            </div>\n            <div class=\"text-danger\"><small *ngIf=\"emailNotAvailable\">Entered Email already taken!!</small>\n            </div>\n        </div>\n\n\n        <label for=\"contact\">contact no: </label>\n        <div class=\"form-field d-flex flex-column mb-2\">\n            <input type=\"text\" name=\"contact\" id=\"contact\" #contact class=\"mb-1 form-control shadow-none\" (keyup)=\"phoneNumberValidaton(contact)\" [ngClass]=\"{'warningOutline' : phoneValidation}\" [formControl]=\"myFormGroup.controls['contact']\" placeholder=\"Enter Contact Number\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"phoneValidation\">Enter Valid Phone Number </small>\n            </div>\n            <div class=\"text-danger\">\n                <small *ngIf=\"phoneValidationIsNan\">Enter numbers only!</small>\n            </div>\n        </div>\n\n\n        <label for=\"password\">Password: </label>\n        <div class=\"form-field d-flex flex-column  mb-2\">\n            <input type=\"password\" name=\"password\" id=\"password\" #password class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['password']\" (keyup)=\"checkPrePassword(password)\" placeholder=\"Enter password\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordLength\">password should be greater than 6 and less than 12 characters </small>\n            </div>\n        </div>\n\n\n\n        <label for=\"re-password\">confirm password: </label>\n        <div class=\"form-field d-flex flex-column mb-2\">\n            <input type=\"password\" name=\"re-password\" id=\"password\" #rePassword class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['rePassword']\" [ngClass]=\"{'warningOutline' : passwordValidation}\" (keyup)=\"checkPassword(password,rePassword)\"\n                placeholder=\"confirm password\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"prePasswordCheck\">Enter password first</small>\n            </div>\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordValidation\">Password didn't matched</small>\n            </div>\n        </div>\n\n        <button class=\"btn mt-3\">Register</button>\n    </form>\n    <div class=\"text-center fs-6\"> Already a user ? <a [routerLink]=\"['/login']\">Back to Login</a> </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotPasswordComponent } from './AuthContainer/forgot-password/forgot-password.component';\nimport { LoginPageComponent } from './AuthContainer/login-page/login-page.component';\nimport { RegistrationPageComponent } from './AuthContainer/registration-page/registration-page.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { AuthGuardService } from './services/auth-guard/auth-guard.service';\nimport { PostTweetsPageComponent } from './user-activity-container/post-tweets-page/post-tweets-page.component';\nimport { HomeComponent } from './user-activity-container/home/home.component';\nimport { UserProfileComponent } from './user-activity-container/user-profile/user-profile.component';\nimport { ViewUsersPageComponent } from './user-activity-container/view-users-page/view-users-page.component';\nimport { ViewUsersTweetsComponent } from './user-activity-container/view-users-tweets/view-users-tweets.component';\n\n\nconst routes: Routes = [\n  {path : \"\" , redirectTo : \"login\", pathMatch : \"full\"},\n  {path : \"login\", component : LoginPageComponent},\n  // {path:'register', loadChildren:()=>import('./login-registration-container/registration-page/registration-page.component').then(m=>m.RegistrationPageComponent)},\n  {path : \"register\", component : RegistrationPageComponent},\n  {path : \"show-tweet\", component : UserProfileComponent,canActivate : [AuthGuardService]},\n  {path : \"home\", component : HomeComponent,canActivate : [AuthGuardService]},\n  {path : \"profile\", component : UserProfileComponent,canActivate : [AuthGuardService]},\n  {path : \"post\", component : PostTweetsPageComponent,canActivate : [AuthGuardService]},\n  {path : \"users\", component : ViewUsersPageComponent,canActivate : [AuthGuardService]},\n  {path : \"user-tweets/:username\", component : ViewUsersTweetsComponent,canActivate : [AuthGuardService]},\n  {path : \"forgot\", component : ForgotPasswordComponent},\n  {path : \"**\", component: ErrorPageComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TweetApp';\n}\n","<div class=\"container-fluid\">\r\n    <!--dust particel-->\r\n    <div>\r\n        <div class=\"starsec\"></div>\r\n        <div class=\"starthird\"></div>\r\n        <div class=\"starfourth\"></div>\r\n        <div class=\"starfifth\"></div>\r\n    </div>\r\n    <!--Dust particle end--->\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NavBarComponent } from './user-activity-container/nav-bar/nav-bar.component';\nimport { ScrollTopComponent } from './user-activity-container/user-scroll-top/scroll-top.component';\nimport { UserProfileComponent } from './user-activity-container/user-profile/user-profile.component';\nimport { PostTweetsPageComponent } from './user-activity-container/post-tweets-page/post-tweets-page.component';\nimport { ViewUsersPageComponent } from './user-activity-container/view-users-page/view-users-page.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FooterComponent } from './user-activity-container/footer/footer.component';\nimport { HomeComponent } from './user-activity-container/home/home.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { LoginPageComponent } from './AuthContainer/login-page/login-page.component';\nimport { RegistrationPageComponent } from './AuthContainer/registration-page/registration-page.component';\nimport { ForgotPasswordComponent } from './AuthContainer/forgot-password/forgot-password.component';\nimport { ViewUsersTweetsComponent } from './user-activity-container/view-users-tweets/view-users-tweets.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    RegistrationPageComponent,\n    UserProfileComponent,\n    PostTweetsPageComponent,\n    NavBarComponent,\n    ScrollTopComponent,\n    ViewUsersPageComponent,\n    ViewUsersTweetsComponent,\n    ForgotPasswordComponent,\n    ErrorPageComponent,\n    FooterComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-wrap d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-12 text-center\">\n                <span class=\"display-1 d-block\">404</span>\n                <div class=\"mb-4 lead\">The page you are looking for was not found.</div>\n                <a [routerLink]=\"['/login']\" class=\"btn btn-link\">Back to Home</a>\n            </div>\n        </div>\n    </div>\n</div>\n","export class UserModel{\r\n    username : string;\r\n    firstName : string;\r\n    lastName : string;\r\n    email : string;\r\n    password : string;\r\n    contactNum : string;\r\n\r\n    constructor(username, firstName, lastName, email, password, contactNum){\r\n        this.username = username;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email =  email;\r\n        this.password = password;\r\n        this.contactNum = contactNum;\r\n    }\r\n}","export class AuthenticationRequest{\r\n    username : string;\r\n    password : string;\r\n\r\n    constructor(username,password){\r\n        this.username = username\r\n        this.password = password\r\n    }\r\n}","export class NewPassword{\r\n    newPassword :  string;\r\n    contact : string;\r\n    constructor(newPassword, contact){\r\n        this.newPassword = newPassword;\r\n        this.contact = contact;\r\n    }\r\n}","export class Reply{\r\n    comment : string;\r\n    constructor(comment){\r\n        this.comment = comment;\r\n    }\r\n}","import { Comment } from \"./comment.model\";\r\n\r\nexport class Tweet{\r\n    tweetId : number;\r\n    username : string;\r\n    tweetText : string;\r\n    firstName : string;\r\n    lastName : string;\r\n    tweetDate : Date\r\n    comments  : Array<Comment>\r\n    likes : Array<string>\r\n\r\n    //posting the tweet\r\n    constructor(username, tweetText , firstName , lastName , tweetDate ){\r\n        this.username =  username;\r\n        this.tweetText = tweetText;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.tweetDate = tweetDate;\r\n    }\r\n    \r\n    }\r\n    ","export class TweetUpdate{\r\n    tweetId : string;\r\n    tweetText : string;\r\n    constructor(tweetId , tweetText){\r\n        this.tweetId = tweetId;\r\n        this.tweetText = tweetText;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(public router : Router) { }\n  \n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if(this.isUserLoggedIn())\n        return true;\n    else{\n      this.router.navigate(['/login']);\n      return false;\n    }    \n        \n}\n\n  isUserLoggedIn(): boolean{\n    let user = sessionStorage.getItem('user');\n    if(user == null)\n      return false;\n    return true;  \n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Reply } from 'src/app/model/reply.model';\nimport { Tweet } from 'src/app/model/tweet.model';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { TweetUpdate } from 'src/app/model/tweetUpdate.model';\nimport {map} from 'rxjs/operators';\n\nconst API_URL = \"http://localhost:8082/api/v1.0\"\nexport const Search_URL = \"http://localhost:8082/api/v1.0/tweets/user/search/\";\nexport const Search_User_URL = \"http://localhost:8082/api/v1.0/tweets/user/profile/\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetsService {\n\n  constructor(public http  : HttpClient) { }\n\n  getAllTweets(userName : string ) : Observable<TweetResponse[]>{\n    let headers = new HttpHeaders({'loggedInUser': sessionStorage.getItem('user')});\n    return this.http.get<TweetResponse[]>(API_URL+\"/tweets/all\",{headers});\n  }\n  \n  getAllTweetsOfUser(userName : string ) : Observable<TweetResponse[]>{\n    let headers = new HttpHeaders({'loggedInUser': sessionStorage.getItem('user')});\n    return this.http.get<TweetResponse[]>(API_URL+\"/tweets/\"+userName,{headers});\n  }\n\n  searchUser(name : string) : any{\n    return this.http.get(Search_URL+name);\n  }\n\n  userDetails(name: string) :any {\n    return this.http.get(Search_User_URL+name);\n  }\n\n  replyTweet(reply : string ,id : string){\n    // let headers = new HttpHeaders({'tweetReply': reply});\n    // console.log(id , reply);\n    let cmt = new Reply(reply);\n    return this.http.post(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/reply/\"+id,cmt).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );;\n  }\n\n  likeTweet(id : string){\n    // let headers = new HttpHeaders({'tweetId':id});\n    return this.http.put(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/like/\"+id,null).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n\n  disLikeTweet(id : string){\n    // let headers = new HttpHeaders({'tweetId':id});\n    return this.http.put(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/dislike/\"+id,null).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n\n  editTweet(id : string){\n    return this.http.get(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/\"+id);\n  }\n\n  updateTweet(id : string, text : string){\n    let tweetUpdate = new TweetUpdate(id,text);\n    // let headers = new HttpHeaders({'tweetText': text,'tweetId' : id});\n    return this.http.put(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/update\",tweetUpdate).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n\n  postTweet(tweet : Tweet){\n    return this.http.post(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/add\",tweet);\n  }\n  \n  \n  deleteTweet(id : string){\n    let headers = new HttpHeaders({'tweetId':id});\n    //headers.append(\"tweetId\",id);\n    return this.http.delete(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/delete\",{headers}).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );;\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthenticationRequest } from 'src/app/model/authentication-request.model';\nimport {map} from 'rxjs/operators';\nimport { NewPassword } from 'src/app/model/newpassword.model';\n\nconst API_URL = \"http://localhost:8082/api/v1.0/tweets/login\";\nexport const Forgot_URL=\"http://localhost:8082/api/v1.0/tweets\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n  test: Array<{firstName:string, lastName:string}> = [];\n  constructor(public http : HttpClient) { }\n  login(details : AuthenticationRequest):any{\n    return this.http.post(API_URL,details).pipe(\n      map((successData : Response)=>{\n        // console.log(successData); \n        return successData;\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n  forgotPassword(username : string, password : string, contact : string):any{\n    let newPassword = new NewPassword(password,contact);\n    // console.log(newPassword);\n    return this.http.put(Forgot_URL+\"/\"+username+\"/forgot\",newPassword).pipe(\n      map((successData : Response)=>{\n        // console.log(successData); \n        return successData;\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport {map} from 'rxjs/operators';\n\nexport const API_URL=\"http://localhost:8082/api/v1.0/tweets/register\";\nexport const Users_URL =\"http://localhost:8082/api/v1.0/tweets/users/all\";\nexport const Search_URL = \"http://localhost:8082/api/v1.0/tweets/user/search/\";\nexport const Forgot_URL=\"http://localhost:8082/api/v1.0/tweets\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistrationService {\n\n  constructor(public http : HttpClient) {}\n\n  addNewUser(user : UserModel){\n    return this.http.post(API_URL,user).pipe(\n      map((successData : Response)=>{\n        // console.log(successData)\n        return successData;\n      }),\n      map(failureData=>{\n        // console.log(failureData.status);\n        return failureData;\n      }));\n    }\n  \n  getAllUsers() : any{\n    return this.http.get(Users_URL);\n  }\n\n  searchUser(name : string) : any{\n    return this.http.get(Search_URL+name);\n  }\n \n  forgotPassword(username : string, password : string):any{\n    // let headers = new HttpHeaders({\n    //   newPassword : password\n    // });\n    // let headers = new HttpHeaders().set('newPassword', password);\n    let headers = new HttpHeaders({newPassword : password})\n    // console.log(headers);\n    return this.http.put(Forgot_URL+\"/\"+username+\"/forgot\",{headers});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  copyright_name = \"Parichay Gupta\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"sticky-footer\" class=\"py-4 bg-dark text-white-50\">\n    <div class=\"container d-flex justify-content-around\">\n        <small class=\"fs-5\">Copyright &copy; Twitter App </small>\n        <div>\n            <small class=\"fs-5\"> Created by : {{ copyright_name }}</small>\n        </div>\n        <div class=\"social-icons d-flex justify-content-around align-self-stretch\">\n            <a class=\"bi bi-github mx-3\" href=\"https://github.com/parichaygupta\" target=\"_blank\"></a>\n            <a class=\"bi bi-linkedin mx-3\" href=\"https://linkedin.com/in/parichay-gupta\" target=\"_blank\"></a>\n            <a class=\"bi bi-globe mx-3\" href=\"https://parichaygupta.github.io/my-portfolio\" target=\"_blank\"></a>\n            <a class=\"bi bi-instagram mx-3\" href=\"https://instagram.com/parichay.gupta\" target=\"_blank\"></a>\n            <a class=\"bi bi-whatsapp mx-3\" href=\"https://wa.me/+917737424939\" target=\"_blank\"></a>\n        </div>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\nimport { UserAuthService } from 'src/app/services/user-login/user-auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  myFormGroup : FormGroup;\n  today= new Date();\n  todaysDataTime = '';\n  clickedReplyButton : {[key: number] : boolean} ={};\n  enablePostButton : boolean = false;\n  showElement : boolean = false;\n  searchedUserTweets : string;\n  tweets : TweetResponse[];\n  returnedTweets : TweetResponse[];\n  noTweets : boolean = false;\n  likedTweetPopup : boolean = false;\n  disLikedTweetPopup : boolean = false;\n \n  constructor(formBuilder : FormBuilder, public activeRoute : ActivatedRoute , public tweetService : TweetsService) {\n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530');\n    this.myFormGroup=formBuilder.group({\n      \"reply\" : new FormControl(\"\",Validators.required),\n    })\n\n  }\n\n\n  likeTweet(id : string){\n    // console.log(id);\n    this.tweetService.likeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.likedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.likedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n  \n  disLikeTweet(id : string){\n    // console.log(id);\n    this.tweetService.disLikeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.disLikedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.disLikedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n\n\n  isReplyClicked(index : number){\n    // console.log(index);\n    if(this.clickedReplyButton[index]==false){\n    this.clickedReplyButton[index] = true;\n  }\n    else\n    this.clickedReplyButton[index] = false;\n  }\n  \n  replyTweet(id : string){\n    let reply = this.myFormGroup.controls['reply'].value;\n    if(reply.length==0){\n      alert(\"Reply can't be empty\");\n    }\n    else{\n        // alert(\"commented!\");\n        //console.log(id)\n        this.tweetService.replyTweet(reply,id).subscribe((response=>{\n          console.log(response);\n          if(response==\"success\"){\n            this.myFormGroup.controls['reply'].reset();\n            this.showElement = true;\n            this.getAllTweets();\n            setTimeout(function() {\n              // console.log('hide');\n              this.showElement = false;\n            }.bind(this), 3000);\n          }\n          \n        }),\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n        \n      }\n    }\n  \n  getAllTweets(){\n   \n    this.tweetService.getAllTweets(this.searchedUserTweets).subscribe(response =>{\n      let currentUser =  sessionStorage.getItem('user');\n      this.returnedTweets = response;\n      // console.log(this.returnedTweets);\n      // console.log(currentUser);\n      this.tweets = response;\n      \n         console.log(this.tweets);\n        if(this.tweets.length!=0){\n          this.noTweets = false;\n        }else{\n          this.noTweets = true;\n        }        \n      });  \n  }\n  \n  showButton(){\n    let reply = this.myFormGroup.controls['reply'].value;\n    // console.log(reply);\n    if(reply.length==0){\n      this.enablePostButton = false;\n    }else{\n      this.enablePostButton = true;\n    }\n  }\n\n\n  ngOnInit(): void {\n      this.getAllTweets();\n      \n      // setInterval(()=>{\n      //   // console.log(\"called set interval\");\n      //   this.getAllTweets();\n      // },5000) \n    }    \n\n}","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div *ngIf=\"showElement\" class=\"msg mt-1 text-center\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Commented!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"likedTweetPopup\" class=\" msg mt-1 text-center\">\n    <div id=\" alert-dismissible \" class=\"alert alert-success alert-dismissible fade show \" role=\"alert \">\n        <strong>Liked!</strong>\n    </div>\n</div>\n<div *ngIf=\"disLikedTweetPopup \" class=\" msg mt-1 text-center\">\n    <div id=\"alert-dismissible \" class=\"alert alert-danger alert-dismissible fade show \" role=\"alert \">\n        <strong>DisLiked!</strong>\n    </div>\n</div>\n\n<div class=\"container mt-4 \">\n\n\n    <div *ngIf=\"noTweets \" class=\"py-3 mt-4 text-center \">\n        <h3 class=\"mt-4 \">No tweets to display!!</h3>\n        <a [routerLink]=\"[ '/post'] \">Post the first tweet</a>\n    </div>\n\n    <!-- card to display -->\n    <div class=\"wrapper \" *ngFor=\"let tweet of tweets; index as i \">\n\n\n        <div class=\"top-section d-flex justify-content-between me-2 \">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png \" alt=\" twitter-logo \">\n            <div class=\"text-center mt-2 pe-5 align-self-center name \"> {{tweet.firstName}} {{tweet.lastName}} </div>\n            <div class=\"text-center pe-5 align-self-center tweetDate\"> {{tweet.tweetDate}} </div>\n\n        </div>\n        <div class=\"mid-section d-flex ps-4 pe-4 mt-4 \">\n            <p class=\"post-content text-justify text-dark \"> {{tweet.tweetText}}\n            </p>\n        </div>\n\n        <div class=\"bottom-section d-flex justify-content-around ps-4 mt-2 \">\n\n            <span *ngIf=\"!tweet.likeStatus \" class=\"col-4 \" (click)=\"likeTweet(tweet.tweetId) \"><i class=\"bi bi-heart text-primary \"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <span *ngIf=\"tweet.likeStatus \" (click)=\"disLikeTweet(tweet.tweetId) \" class=\"col-4 \"><i\n                class=\"bi bi-heart-fill text-danger \"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <button class=\"btn col-4 shadow-none \"><i (click)=\"isReplyClicked(i) \"\n                class=\"bi bi-chat-left-text text-primary \" ></i>&nbsp; {{tweet.commentsCount}}</button>\n        </div>\n\n        <hr class=\"divider bg-dark \" *ngIf=\"clickedReplyButton[i] \">\n        <label class=\"font-weight-bold \" *ngIf=\"clickedReplyButton[i] \">Replies</label>\n\n        <div *ngIf=\"clickedReplyButton[i] \" class=\"scroll mt-3 p-2 \">\n            <div *ngFor=\"let com of tweet.comments \" class=\"comments-section row d-flex flex-column justify-content-around \">\n                <h6 class=\"ml-2 col \">\n                    {{com.username}}\n                </h6>\n                <p class=\"ml-2 col border-bottom border-dark \">{{com.comment}}</p>\n            </div>\n        </div>\n\n\n        <hr *ngIf=\"clickedReplyButton[i] \" />\n        <form class=\"formgroup \" *ngIf=\"clickedReplyButton[i] \" [formGroup]=\"myFormGroup \" (ngSubmit)=\"replyTweet(tweet.tweetId) \">\n\n            <textarea class=\"mb-1 form-control \" id=\"textarea \" [formControl]=\"myFormGroup.controls[ 'reply'] \" placeholder=\"Write your comment, it should less than 144 characters!! \" name=\"reply \" maxlength=\"144 \" rows=\"3 \"></textarea>\n            <button class=\"btn comment-button me-2 mt-3 \" type=\"submit \">comment</button>\n        </form>\n\n    </div>\n\n    <app-scroll-top></app-scroll-top>\n</div>\n\n\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  name : string;\n  constructor() {}\n  \n  logout(){\n    // console.log(\"logout called!\")\n    sessionStorage.clear();\n  }\n\n  ngOnInit(): void {\n    this.name = sessionStorage.getItem('firstName').toLocaleUpperCase();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container\">\n        <div>\n            <a class=\"navbar-brand\" [routerLink]=\"['/home']\">\n                <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\"Tweet-app-logo\" class=\"d-inline\">\n            </a>\n            <a class=\"navbar-brand fs-4\" [routerLink]=\"['/home']\">\n                <span class=\"text-uppercase font-weight-bold\">TweetApp</span>\n            </a>\n        </div>\n\n\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation \">\n    <span class=\"navbar-toggler-icon\" ><i class=\"bi bi-three-dots\" style=\"color:#fff; font-size:28px;\"></i></span>\n    </button>\n\n        <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarText\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/home']\">Home</button>\n                </li>\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/profile']\">Profile</button>\n                </li>\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/post']\">Post-Tweet</button>\n                </li>\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/users']\">All-Users</button>\n                </li>\n                <li class=\"nav-item mx-3\"> <button class=\"btn logout-btn my-2 my-sm-0 shadow-none\" [routerLink]=\"['/login']\" (click)=\"logout()\" type=\"button\">Logout <i class=\"ml-2 bi bi-box-arrow-right\"></i></button>\n                </li>\n            </ul>\n        </div>\n\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Tweet } from 'src/app/model/tweet.model';\nimport { formatDate, LocationStrategy } from '@angular/common';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\n\n@Component({\n  selector: 'app-post-tweets-page',\n  templateUrl: './post-tweets-page.component.html',\n  styleUrls: ['./post-tweets-page.component.css']\n})\nexport class PostTweetsPageComponent implements OnInit {\n  \n  myFormGroup : FormGroup;\n  remainingTweetLength : number;\n  remainingTagLength : number;\n  tweetLengthExceeded : boolean = false;\n  tagLengthExceeded : boolean = false;\n  showTweetLength : boolean = false;\n  showTagLength : boolean = false;\n  showTweetRed : boolean = false;\n  showTagRed : boolean = false;\n  tweetEmpty : boolean = false;\n  showElement : boolean = false;\n\n  tweet : Array<Tweet>;\n\n  userName : string;\n  firstName : string;\n  lastName : string;\n  today= new Date();\n  todaysDataTime = '';\n\n  constructor(public router : Router, formBuilder : FormBuilder , public postTweetService : TweetsService) { \n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530')\n    this.myFormGroup=formBuilder.group({\n      \"tweet\" : new FormControl(\"\",Validators.required),\n      \"tag\" : new FormControl(\"\"),\n    })\n  }\n\n  postTweet(){\n    // console.log(\"post called\");\n    let tweet = this.myFormGroup.controls['tweet'].value;\n    \n    if(tweet.length == 0){\n      this.tweetEmpty = true;\n    }\n    else{\n      \n      // creating a tweet\n      // sessionStorage.getItem need to be used for getting user name\n      let newTweet = new Tweet(\n                            sessionStorage.getItem('user'),\n                            this.myFormGroup.controls['tweet'].value,\n                            sessionStorage.getItem('firstName'),\n                            sessionStorage.getItem('lastName'),\n                            this.todaysDataTime\n                            )\n      \n      // calling tweet service for uploading tweet \n\n      this.postTweetService.postTweet(newTweet).subscribe((response : Response)=>{\n        // console.log(response);\n        //console.log(response.text()); \n      });\n  \n      // console.log(this.myFormGroup.controls['tweet'].value);\n      this.showElement = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.showElement = false;\n        }.bind(this), 3000);\n      this.myFormGroup.controls['tweet'].reset();\n    //  this.myFormGroup.controls['tag'].reset();\n      this.showTweetLength = false;\n      //this.showTagLength = false;\n    }\n    \n  }\n\n  tweetLengthValidationMethod(){\n    \n    let tweet = this.myFormGroup.controls['tweet'].value;\n    if(tweet.length!=0){\n      this.tweetEmpty = false;\n      this.showTweetLength = true;\n      this.remainingTweetLength = 145 - tweet.length ;\n    }\n    else{\n      this.showTweetLength = false\n    }\n\n    if(tweet.length>=145 && tweet.length!=0){\n      this.showTweetRed = true;\n      this.tweetLengthExceeded = true;\n      \n    }else{\n      \n      this.tweetLengthExceeded = false;\n      this.showTweetRed = false;\n    }\n  }\n\n\n\n\n  // tagLengthValidationMethod(){\n    \n  //   let tag = this.myFormGroup.controls['tag'].value;\n    \n  //   if(tag.length!=0){\n  //     this.showTagLength = true;\n  //     this.remainingTagLength = 50 - tag.length;\n  //  }\n  //  else{\n  //    this.showTagLength = false;\n  //  }\n  //   if(tag.length>=50 && tag.length!=0){\n  //     this.tagLengthExceeded = true;\n  //     this.showTagRed = true;\n  //   }else{\n  //     this.tagLengthExceeded = false;\n  //     this.showTagRed = false;\n  //   }\n  // }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div class=\"container px-1 px-md-5 px-lg-1 px-xl-5 mt-4 py-5 mx-auto\">\n\n    <div *ngIf=\"showElement\" class=\" msg mt-1\">\n        <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>Tweeted!</strong>\n        </div>\n    </div>\n\n    <div class=\"wrapper d-flex flex-column\">\n        <h3 class=\"text-center\">Post your tweet</h3>\n\n\n        <form class=\"formgroup\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"postTweet()\">\n            <div class=\"text-center\">\n                <p *ngIf=\"tweetEmpty\"><b class=\"text-danger\">Tweet</b> can't be empty !</p>\n            </div>\n\n            <label class=\"mb-1 mt-3\" for=\"textarea\">                                \n                        <h6 class=\"font-weight-bolder\">Tweet Description <i class=\"bi bi-pencil font-weight-bolder\"></i></h6>\n                    </label>\n\n            <textarea class=\"mb-0 form-control\" id=\"textarea\" name=\"textarea\" [formControl]=\"myFormGroup.controls['tweet']\" (keyup)=\"tweetLengthValidationMethod()\" placeholder=\"Should less than 145 characters!!\" maxlength=\"145\" rows=\"3\"></textarea>\n\n            <div *ngIf=\"showTweetLength\">\n                <p *ngIf=\"showTweetRed\"><b class=\"text-danger\">145 </b> characters length completed</p>\n                <p *ngIf=\"!showTweetRed\"><b>{{remainingTweetLength}} </b>characters remaining!!</p>\n            </div>\n\n            <button class=\"btn float-right button-post mt-3\" type=\"submit\">Post Tweet</button>\n\n        </form>\n\n    </div>\n</div>\n\n\n<app-footer></app-footer>","import { formatDate, LocationStrategy } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommentsList } from 'src/app/model/commentsList.model';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\n\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\n\nexport class UserProfileComponent implements OnInit {\n  myFormGroup: FormGroup;\n  today = new Date();\n  todaysDataTime = '';\n  clickedReplyButton: { [key: number]: boolean } = {};\n  enableLikeButton: { [key: number]: boolean } = {};\n  enablePostButton: boolean = false;\n  showElement: boolean = false;\n  tweets: TweetResponse[];\n  singleTweet: TweetResponse;\n  commentList: Array<CommentsList>;\n  noTweets: boolean = false;\n  obj: Object;\n  tweetTex: string;\n  tweetEmpty: boolean = false;\n  showTweetLength: boolean = false;\n  remainingTweetLength: number;\n  showTweetRed: boolean = false;\n  tweetLengthExceeded: boolean = false;\n  showModel: boolean = false;\n  deleteTweetPopup: boolean = false;\n  likedTweetPopup: boolean = false;\n  updateTweetPopup: boolean = false;\n  disLikedTweetPopup: boolean = false;\n  userDetail:UserModel;\n  firstName:string;\n  lastName:string;\n  email:string;\n  contact:string;\n\n  loggedInUser = sessionStorage.getItem('user');\n  // noComments : {[key: number] : boolean} ={};\n\n  constructor(formBuilder: FormBuilder, private locationStrategy: LocationStrategy, public tweetService: TweetsService, public router: Router) {\n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530');\n    this.myFormGroup = formBuilder.group({\n      \"reply\": new FormControl(\"\", Validators.required),\n    })\n  }\n\n  showTweets() {\n    this.tweetService.getAllTweetsOfUser(this.loggedInUser).subscribe(response => {\n\n      this.tweets = response;\n      for (let res of response) {\n        if (res.username === this.loggedInUser) {\n          this.tweets = this.tweets.filter(res => res.username === this.loggedInUser);\n        }\n      }\n      if (this.tweets.length != 0) {\n        this.noTweets = false;\n      } else {\n        this.noTweets = true;\n      }\n\n    });\n  }\n\n  userDetails() {\n    this.tweetService.userDetails(this.loggedInUser).subscribe(response =>{\n      this.userDetail=response;\n      this.firstName = this.userDetail.firstName;\n      this.lastName = this.userDetail.lastName;\n      this.email = this.userDetail.username;\n      this.contact = this.userDetail.contactNum;\n\n    });\n  } deleteTweet(id: string) {\n    this.tweetService.deleteTweet(id).subscribe(response => {\n      this.tweetService.getAllTweetsOfUser(this.loggedInUser).subscribe(response => {\n        this.tweets = response;\n        this.deleteTweetPopup = true;\n        setTimeout(function () {\n          this.deleteTweetPopup = false;\n        }.bind(this), 3000);\n        if (this.tweets.length != 0) {\n          this.noTweets = false;\n        } else {\n          this.noTweets = true;\n        }\n      },\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n    });\n  }\n\n  editTweet(id: string) {\n    this.showModel = true;\n    this.tweetService.editTweet(id).subscribe((response: TweetResponse) => {\n      this.singleTweet = response;\n      this.tweetTex = this.singleTweet.tweetText;\n    })\n  }\n\n  tweetLengthValidationMethod(tweetOfUser: HTMLInputElement) {\n\n    let tweet = tweetOfUser.value;\n    if (tweet.length != 0) {\n      this.tweetEmpty = false;\n      this.showTweetLength = true;\n      this.remainingTweetLength = 145 - tweet.length;\n    }\n    else {\n      this.showTweetLength = false\n    }\n\n    if (tweet.length >= 145 && tweet.length != 0) {\n      this.showTweetRed = true;\n      this.tweetLengthExceeded = true;\n\n    } else {\n\n      this.tweetLengthExceeded = false;\n      this.showTweetRed = false;\n    }\n  }\n\n\n  updateTweet(tweet: HTMLInputElement, id: string) {\n    if (tweet.value.length == 0) {\n      this.tweetEmpty = true\n    }\n    else {\n      this.tweetEmpty = false;\n    }\n    this.tweetService.updateTweet(id, tweet.value).subscribe((response) => {\n      if (response == \"success\") {\n        setTimeout(function () {\n          this.updateTweetPopup = true;\n          this.updateTweetPopup = false;\n        }.bind(this), 3000);\n        this.showModel = false;\n        this.showTweets();\n        this.closeUpdateTweet(tweet);\n      }\n    },\n      // failure function\n      failureData => {\n        // console.log(failureData);\n      });\n  }\n\n  closeUpdateTweet(tweet: HTMLInputElement) {\n    tweet.value = '';\n    this.showModel = false;\n    this.showTweetLength = false;\n  }\n\n  likeTweet(id: string) {\n    this.tweetService.likeTweet(id).subscribe((response) => {\n      if (response == \"success\") {\n        this.showTweets();\n        this.likedTweetPopup = true;\n        setTimeout(function () {\n          this.likedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n      // failure function\n      failureData => {\n        // console.log(failureData);\n      });\n  }\n\n  disLikeTweet(id: string) {\n    this.tweetService.disLikeTweet(id).subscribe((response) => {\n      if (response == \"success\") {\n        this.showTweets();\n        this.disLikedTweetPopup = true;\n        setTimeout(function () {\n          this.disLikedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n      // failure function\n      failureData => {\n        // console.log(failureData);\n      });\n  }\n\n\n  modelshow() {\n    if (this.showModel = false) {\n      this.showModel = true\n    } else {\n      this.showModel = false\n    }\n  }\n\n\n\n  replyTweet(id: string) {\n    let reply = this.myFormGroup.controls['reply'].value;\n    if (reply.length == 0) {\n      alert(\"Reply can't be empty\");\n    }\n    else {\n      this.tweetService.replyTweet(reply, id).subscribe((response => {\n        if (response == \"success\") {\n          this.myFormGroup.controls['reply'].reset();\n          this.showElement = true;\n          this.showTweets();\n          setTimeout(function () {\n            this.showElement = false;\n          }.bind(this), 3000);\n        }\n\n      }),\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n\n    }\n  }\n\n\n  showButton() {\n    let reply = this.myFormGroup.controls['reply'].value;\n    if (reply.length == 0) {\n      this.enablePostButton = false;\n    } else {\n      this.enablePostButton = true;\n    }\n  }\n\n  preventBackButton() {\n    history.pushState(null, null, location.href);\n    this.locationStrategy.onPopState(() => {\n      history.pushState(null, null, location.href);\n    })\n  }\n\n  openSite(siteUrl) {\n    window.open(\"//\" + siteUrl, '_blank');\n  }\n\n  isReplyClicked(index: number) {\n    if (this.clickedReplyButton[index] == false) {\n      this.clickedReplyButton[index] = true;\n    }\n    else\n      this.clickedReplyButton[index] = false;\n  }\n\n\n  ngOnInit(): void {\n    this.preventBackButton();\n    this.showTweets();\n    this.userDetails();\n    // setInterval(()=>{\n    //   // console.log(\"called set interval\");\n    //   this.showTweets();\n    // },5000) \n  }\n\n}\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div *ngIf=\"showElement\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Commented!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"likedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Liked!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"disLikedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <strong>DisLiked!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"deleteTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <strong>Deleted!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"updateTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Updated!</strong>\n    </div>\n</div>\n\n<div class=\"container mt-4\">\n    <div *ngIf=\"noTweets\" class=\"py-3 mt-4\" style=\"text-align: center;\">\n        <h3 class=\"mt-4\">You have no tweets to display!!</h3>\n        <a [routerLink]=\"['/post']\">Post your first tweet :)</a>\n    </div>\n\n    <div class=\"wrapper-profile d-flex \">\n        <div class=\"col-3 align-self-center\">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" alt=\" twitter-logo\">\n        </div>\n        <div class=\"col-9 align-self-center\">\n            <div class=\"mt-2 pe-5 name\"> <b>Full Name: </b>{{firstName}} {{lastName}} </div>\n            <div class=\"mt-2 pe-5 name\"> <b>Email: </b>{{email}} </div>\n            <div class=\"mt-2 pe-5  name\"><b>Contact No: </b> {{contact}}</div>\n        </div>\n    </div>\n    <!-- card to display -->\n    <div class=\"wrapper\" *ngFor=\"let tweet of tweets; index as i;\">\n\n        <div class=\"top-section d-flex justify-content-between me-2\">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" alt=\" twitter-logo\">\n            <div class=\"text-center mt-2 pe-5 align-self-center name\"> {{tweet.firstName}} {{tweet.lastName}} </div>\n            <div class=\"text-center pe-5 align-self-center tweetDate\"> {{tweet.tweetDate}} </div>\n\n\n            <div class=\"col-1 dropdown\">\n\n                <button class=\"btn dropdown shadow-none\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n                        <i class=\"bi bi-three-dots-vertical text-primary\"></i>\n                </button>\n\n                <ul class=\"bg-light dropdown-menu dropend\" aria-labelledby=\"dropdownMenuButton\">\n\n                    <li (click)=\"deleteTweet(tweet.tweetId)\" class=\"del dropdown-item text-center\">Delete\n                        <i class=\"ml-3 bi bi-trash\"></i>\n                    </li>\n                    <li>\n                        <hr class=\"dropdown-divider bg-dark\">\n                    </li>\n                    <li (click)=\"editTweet(tweet.tweetId)\" class=\"edit dropdown-item text-center\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">Edit\n                        <i class=\"ml-3 bi bi-pencil-fill\">\n                        </i>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\"mid-section d-flex ps-4 pe-4 mt-4\">\n            <p class=\"post-content text-justify text-dark\"> {{tweet.tweetText}}\n            </p>\n        </div>\n\n        <div class=\"bottom-section d-flex justify-content-around ps-4 mt-2\">\n\n            <span *ngIf=\"!tweet.likeStatus\" class=\"col-4\" (click)=\"likeTweet(tweet.tweetId)\"><i class=\"bi bi-heart text-primary\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <span *ngIf=\"tweet.likeStatus\" (click)=\"disLikeTweet(tweet.tweetId)\" class=\"col-4\"><i\n                class=\"bi bi-heart-fill text-danger\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <button class=\"btn col-4 shadow-none\"><i (click)=\"isReplyClicked(i)\"\n                class=\"bi bi-chat-left-text text-primary\" ></i>&nbsp; {{tweet.commentsCount}}</button>\n        </div>\n\n        <hr class=\"divider bg-dark\" *ngIf=\"clickedReplyButton[i]\">\n        <label class=\"font-weight-bold\" *ngIf=\"clickedReplyButton[i]\">Replies</label>\n\n        <div *ngIf=\"clickedReplyButton[i] \" class=\"scroll mt-3 p-2\">\n            <div *ngFor=\"let com of tweet.comments\" class=\"comments-section row d-flex flex-column justify-content-around\">\n                <h6 class=\"ml-2 col\">\n                    {{com.username}}\n                </h6>\n                <p class=\"ml-2 col border-bottom border-dark\">{{com.comment}}</p>\n            </div>\n        </div>\n\n\n        <hr *ngIf=\"clickedReplyButton[i]\" />\n        <form class=\"formgroup \" *ngIf=\"clickedReplyButton[i]\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"replyTweet(tweet.tweetId)\">\n\n            <textarea class=\"mb-1 form-control\" id=\"textarea\" [formControl]=\"myFormGroup.controls['reply']\" placeholder=\"Write your comment, it should less than 144 characters!!\" name=\"reply\" maxlength=\"144\" rows=\"3\"></textarea>\n            <button class=\"btn comment-button  me-2 mt-3\" type=\"submit\">comment</button>\n        </form>\n\n    </div>\n    <app-scroll-top></app-scroll-top>\n\n\n    <!-- Modal -->\n    <div *ngIf=\"showModel\">\n        <div *ngIf=\"showModel\" class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div class=\"modal-content wrapper-modal\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Update Tweet</h5>\n                    </div>\n                    <div class=\"text-center\">\n                        <p *ngIf=\"tweetEmpty\" class=\"text-danger\">Tweet can't be empty !</p>\n                    </div>\n                    <div class=\"modal-body\">\n                        <textarea #textarea (keyup)=\"tweetLengthValidationMethod(textarea)\" id=\"textarea\" maxlength=\"145\" name=\"textarea\" rows=\"3\">{{tweetTex}}</textarea>\n                        <div *ngIf=\"showTweetLength\">\n                            <p *ngIf=\"showTweetRed\"><b class=\"text-danger\">145 </b> characters length completed</p>\n                            <p *ngIf=\"!showTweetRed\"><b>{{remainingTweetLength}} </b>characters remaining!!</p>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn comment-close\" (click)=\"closeUpdateTweet(textarea) \" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" class=\"btn comment-button\" [disabled]=\"tweetEmpty\" (click)=\"updateTweet(textarea, singleTweet.tweetId)\" data-dismiss=\"modal\">Save changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n<app-footer></app-footer>","import { DOCUMENT } from '@angular/common';\nimport { Component, HostListener, Inject, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-scroll-top',\n  templateUrl: './scroll-top.component.html',\n  styleUrls: ['./scroll-top.component.css']\n})\nexport class ScrollTopComponent implements OnInit {\n  windowScrolled: boolean;\n  constructor(@Inject(DOCUMENT) private document: Document) { }\n  @HostListener(\"window:scroll\", [])\n  onWindowScroll() {\n      if (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop > 100) {\n          this.windowScrolled = true;\n      } \n     else if (this.windowScrolled && window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop < 10) {\n          this.windowScrolled = false;\n      }\n  }\n  scrollToTop() {\n      (function smoothscroll() {\n          var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;\n          if (currentScroll > 0) {\n              window.requestAnimationFrame(smoothscroll);\n              window.scrollTo(0, currentScroll - (currentScroll / 8));\n          }\n      })();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"scroll-to-top\" [ngClass]=\"{'show-scrollTop': windowScrolled}\">\n    <button type=\"button\" class=\"btn active shadow-none text-info\" data-toggle=\"button\" aria-pressed=\"true\" (click)=\"scrollToTop()\">\n        <i class=\"bi bi-arrow-up-circle-fill\"></i>\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { UserRegistrationService } from 'src/app/services/user-registration/user-registration.service';\n\n@Component({\n  selector: 'app-view-users-page',\n  templateUrl: './view-users-page.component.html',\n  styleUrls: ['./view-users-page.component.css']\n})\nexport class ViewUsersPageComponent implements OnInit {\n\n  myFormGroup: FormGroup;\n  showSearchedText: boolean = false;\n  searchedText: string;\n  flag: boolean = false;\n  enableButtonForSearch: boolean = false;\n  userModel: UserModel[];\n  noUsersToDisplay: boolean = false;\n  constructor(formBuilder: FormBuilder, public userService: UserRegistrationService, public router: Router) {\n    this.myFormGroup = formBuilder.group({\n      \"search\": new FormControl(\"\", Validators.required),\n    })\n  }\n\n  // enable search button\n\n  enableSearchButton() {\n    let enteredUserName = this.myFormGroup.controls['search'].value;\n    if (enteredUserName.length > 0) {\n      // this.noUsersToDisplay = false;\n      this.enableButtonForSearch = true;\n    } else {\n      this.enableButtonForSearch = false;\n    }\n\n  }\n\n  //search for user\n\n  search() {\n    // console.log(\"called search\")\n    let enteredUserName = this.myFormGroup.controls['search'].value;\n    if (enteredUserName.length > 0) {\n      this.userService.searchUser(enteredUserName).subscribe(response => {\n        let currentUser = sessionStorage.getItem('user');\n        this.userModel = response;\n        console.log(this.userModel);\n        for (let res of response) {\n          if (res.username.includes(enteredUserName)) {\n            this.userModel = this.userModel.filter(res => res.username.includes(enteredUserName));\n            console.log(this.userModel);\n          }\n        }\n        if(this.userModel.length==0){\n          this.noUsersToDisplay = true;\n        }else{\n          this.noUsersToDisplay = false;\n        }\n      })\n\n      this.showSearchedText = true;\n      this.searchedText = enteredUserName;\n      this.myFormGroup.controls['search'].reset();\n      this.enableButtonForSearch = false;\n    }\n    else {\n      this.showSearchedText = false;\n    }\n    // console.log(enteredUserName);\n  }\n\n  getDetails(username: string) {\n    // console.log(username);\n    this.router.navigate(['/user-tweets/' + username]);\n  }\n\n\n  ngOnInit(): void {\n    if (this.enableButtonForSearch) {\n      this.search();\n    } else {\n      this.userService.getAllUsers().subscribe(response => {\n        // this.userModel = response;\n        let currentUser = sessionStorage.getItem('user');\n        this.userModel = response;\n        for (let res of response) {\n          if (res.username != currentUser) {\n            this.userModel = this.userModel.filter(res => res.username !== currentUser);\n            // console.log(this.userModel);\n          }\n        }\n        if (this.userModel.length == 0) {\n          this.noUsersToDisplay = true;\n        } else {\n          this.noUsersToDisplay = false;\n        }\n        // console.log(this.userModel);\n      })\n    }\n\n  }\n\n}\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div class=\"container\">\n    <div class=\"bg-light py-3 mt-4\" style=\"text-align: center;\">\n        <h3 style=\"font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\">Users</h3>\n\n    </div>\n    <form [formGroup]=\"myFormGroup\" class=\"form-inline mt-4 mb-4 mr-auto\" (ngSubmit)=\"search()\">\n        <input class=\"form-control search-input mr-auto shadow-none\" type=\"search\" (keyup)=\"enableSearchButton()\" [formControl]=\"myFormGroup.controls['search']\" placeholder=\"Search User\" aria-label=\"Search\">\n        <button *ngIf=\"!enableButtonForSearch\" class=\"btn search btn-secondary mr-1\" disabled type=\"submit\"><b class=\"search-text\">Search</b><i class=\"ml-1 bi bi-search\"></i></button>\n        <button *ngIf=\"enableButtonForSearch\" class=\"btn search mr-1\" type=\"submit\"><b class=\"search-text\">Search</b><i class=\"ml-1 bi bi-search\"></i></button>\n    </form>\n    <p *ngIf=\"showSearchedText\">You have searched for : <b>{{searchedText}}</b></p>\n    <div class=\"table-responsvie\">\n\n        <table class=\"table table-bordered table-hover text-center mb-5\">\n\n            <thead class=\"table-primary mb-5\">\n                <tr>\n                    <th>#</th>\n                    <th>Email/Username</th>\n                    <th>Name</th>\n                    <th>View Tweets</th>\n                </tr>\n            </thead>\n\n            <tbody *ngFor=\"let names of userModel; index as i\">\n                <tr class=\"wrapper\">\n                    <th scope=\"row\">{{i+1}}</th>\n                    <td>{{names.username}}</td>\n                    <td>{{names.firstName}} {{names.lastName}}</td>\n                    <td>\n                        <button type=\"button\" class=\"btn button\" (click)=\"getDetails(names.username)\">\n                view tweets</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngIf=\"noUsersToDisplay\" class=\"row text-center\">\n        <h3 class=\"col-12\">No users found with username {{searchedText}}!!</h3>\n    </div>\n    <app-scroll-top></app-scroll-top>\n\n</div>\n<app-footer class=\"footer\"></app-footer>","import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\n\n@Component({\n  selector: 'app-view-users-tweets',\n  templateUrl: './view-users-tweets.component.html',\n  styleUrls: ['./view-users-tweets.component.css']\n})\nexport class ViewUsersTweetsComponent implements OnInit {\n  \n  myFormGroup : FormGroup;\n  today= new Date();\n  todaysDataTime = '';\n  clickedReplyButton : {[key: number] : boolean} ={};\n  enablePostButton : boolean = false;\n  showElement : boolean = false;\n  searchedUserTweets : string;\n  tweets : TweetResponse[];\n  returnedTweets : TweetResponse[];\n  noTweets : boolean = false;\n  likedTweetPopup : boolean = false;\n  disLikedTweetPopup : boolean = false;\n\n  constructor(formBuilder : FormBuilder, public activeRoute : ActivatedRoute , public tweetService : TweetsService) {\n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530');\n    this.myFormGroup=formBuilder.group({\n      \"reply\" : new FormControl(\"\",Validators.required),\n    })\n\n  }\n\n  likeTweet(id : string){\n    // console.log(id);\n    this.tweetService.likeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.likedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.likedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n  \n  disLikeTweet(id : string){\n    // console.log(id);\n    this.tweetService.disLikeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.disLikedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.disLikedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n\n\n  isReplyClicked(index : number){\n    // console.log(index);\n    if(this.clickedReplyButton[index]==false){\n    this.clickedReplyButton[index] = true;\n  }\n    else\n    this.clickedReplyButton[index] = false;\n  }\n\n\n  replyTweet(id : string){\n    let reply = this.myFormGroup.controls['reply'].value;\n    if(reply.length==0){\n      alert(\"Reply can't be empty\");\n    }\n    else{\n        // alert(\"commented!\");\n        //console.log(id)\n        this.tweetService.replyTweet(reply,id).subscribe((response=>{\n          // console.log(response);\n          if(response==\"success\"){\n            this.myFormGroup.controls['reply'].reset();\n            this.showElement = true;\n            this.getAllTweets();\n            setTimeout(function() {\n              // console.log('hide');\n              this.showElement = false;\n            }.bind(this), 3000);\n          }\n          \n        }),\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n        \n      }\n    }\n  \n  getAllTweets(){\n    this.activeRoute.params.subscribe((parameter => this.searchedUserTweets = parameter[\"username\"]));\n     console.log(this.searchedUserTweets);  \n    this.tweetService.getAllTweetsOfUser(this.searchedUserTweets).subscribe(response =>{\n      let currentUser =  sessionStorage.getItem('user');\n      this.returnedTweets = response;\n      console.log(this.returnedTweets);\n      console.log(currentUser);\n      this.tweets = response;\n      for(let res of response){\n        if(res.username != currentUser){\n          this.tweets = this.tweets.filter(res => res.username=== this.searchedUserTweets);\n           console.log(this.tweets);\n        }\n      }\n         console.log(this.tweets);\n        if(this.tweets.length!=0){\n          this.noTweets = false;\n        }else{\n          this.noTweets = true;\n        }        \n      });  \n  }\n  \n  showButton(){\n    let reply = this.myFormGroup.controls['reply'].value;\n    // console.log(reply);\n    if(reply.length==0){\n      this.enablePostButton = false;\n    }else{\n      this.enablePostButton = true;\n    }\n  }\n\n\n  ngOnInit(): void {\n      this.getAllTweets();\n      // setInterval(()=>{\n      //   // console.log(\"called set interval\");\n      //   this.getAllTweets();\n      // },5000) \n    }    \n  }\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div *ngIf=\"showElement\" class=\"msg mt-1\" style=\"text-align: center;\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Commented!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"likedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Liked!</strong>\n    </div>\n</div>\n<div *ngIf=\"disLikedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <strong>DisLiked!</strong>\n    </div>\n</div>\n\n<div class=\"container mt-4\">\n    <div class=\"bg-light py-3 mt-4\" style=\"text-align: center;\">\n        <p>Showing tweets of</p>\n        <h3 style=\"font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\">{{searchedUserTweets}}\n        </h3>\n        <a *ngIf=\"!noTweets\" [routerLink]=\"['/users']\">Go back to search users ?</a>\n    </div>\n\n    <div *ngIf=\"noTweets\" class=\"py-3 mt-4\" style=\"text-align: center;\">\n        <h3 class=\"mt-4\">User has no tweets to display!!</h3>\n        <a [routerLink]=\"['/users']\">Go back to search users ?</a>\n    </div>\n\n    <!-- card to display -->\n    <div class=\"wrapper\" *ngFor=\"let tweet of tweets; index as i\">\n\n\n        <div class=\"top-section d-flex justify-content-between me-2\">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" alt=\" twitter-logo\">\n            <div class=\"text-center mt-2 pe-5 align-self-center name\"> {{tweet.firstName}} {{tweet.lastName}} </div>\n            <div class=\"text-center pe-5 align-self-center tweetDate\"> {{tweet.tweetDate}} </div>\n\n        </div>\n        <div class=\"mid-section d-flex ps-4 pe-4 mt-4\">\n            <p class=\"post-content text-justify text-dark\"> {{tweet.tweetText}}\n            </p>\n        </div>\n        <div class=\"bottom-section d-flex justify-content-around ps-4 mt-2\">\n\n            <span *ngIf=\"!tweet.likeStatus\" class=\"col-4\" (click)=\"likeTweet(tweet.tweetId)\"><i class=\"bi bi-heart text-primary\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <span *ngIf=\"tweet.likeStatus\" (click)=\"disLikeTweet(tweet.tweetId)\" class=\"col-4\"><i\n                class=\"bi bi-heart-fill text-danger\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <button class=\"btn col-4 shadow-none\"><i (click)=\"isReplyClicked(i)\"\n                class=\"bi bi-chat-left-text text-primary\" ></i>&nbsp; {{tweet.commentsCount}}</button>\n        </div>\n\n        <hr class=\"divider bg-dark\" *ngIf=\"clickedReplyButton[i]\">\n        <label class=\"font-weight-bold\" *ngIf=\"clickedReplyButton[i]\">Replies</label>\n\n        <div *ngIf=\"clickedReplyButton[i] \" class=\"scroll mt-3 p-2\">\n            <div *ngFor=\"let com of tweet.comments\" class=\"comments-section row d-flex flex-column justify-content-around\">\n                <h6 class=\"ml-2 col\">\n                    {{com.username}}\n                </h6>\n                <p class=\"ml-2 col border-bottom border-dark\">{{com.comment}}</p>\n            </div>\n        </div>\n\n\n        <hr *ngIf=\"clickedReplyButton[i]\" />\n        <form class=\"formgroup \" *ngIf=\"clickedReplyButton[i]\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"replyTweet(tweet.tweetId)\">\n\n            <textarea class=\"mb-1 form-control\" id=\"textarea\" [formControl]=\"myFormGroup.controls['reply']\" placeholder=\"Write your comment, it should less than 144 characters!!\" name=\"reply\" maxlength=\"144\" rows=\"3\"></textarea>\n            <button class=\"btn comment-button  me-2 mt-3\" type=\"submit\">comment</button>\n        </form>\n\n    </div>\n\n    <app-scroll-top></app-scroll-top>\n</div>\n\n\n\n<app-footer></app-footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"]}