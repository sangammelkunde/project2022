{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/AuthContainer/forgot-password/forgot-password.component.ts","./src/app/AuthContainer/forgot-password/forgot-password.component.html","./src/app/AuthContainer/login-page/login-page.component.ts","./src/app/AuthContainer/login-page/login-page.component.html","./src/app/AuthContainer/registration-page/registration-page.component.ts","./src/app/AuthContainer/registration-page/registration-page.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/model/UserModel.model.ts","./src/app/model/authentication-request.model.ts","./src/app/model/newpassword.model.ts","./src/app/model/reply.model.ts","./src/app/model/tweet.model.ts","./src/app/model/tweetUpdate.model.ts","./src/app/services/auth-guard/auth-guard.service.ts","./src/app/services/tweets/tweets.service.ts","./src/app/services/user-login/user-auth.service.ts","./src/app/services/user-registration/user-registration.service.ts","./src/app/user-activity-container/footer/footer.component.ts","./src/app/user-activity-container/footer/footer.component.html","./src/app/user-activity-container/home/home.component.ts","./src/app/user-activity-container/home/home.component.html","./src/app/user-activity-container/nav-bar/nav-bar.component.ts","./src/app/user-activity-container/nav-bar/nav-bar.component.html","./src/app/user-activity-container/post-tweets-page/post-tweets-page.component.ts","./src/app/user-activity-container/post-tweets-page/post-tweets-page.component.html","./src/app/user-activity-container/user-profile/user-profile.component.ts","./src/app/user-activity-container/user-profile/user-profile.component.html","./src/app/user-activity-container/user-scroll-top/scroll-top.component.ts","./src/app/user-activity-container/user-scroll-top/scroll-top.component.html","./src/app/user-activity-container/view-users-page/view-users-page.component.ts","./src/app/user-activity-container/view-users-page/view-users-page.component.html","./src/app/user-activity-container/view-users-tweets/view-users-tweets.component.ts","./src/app/user-activity-container/view-users-tweets/view-users-tweets.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserAuthService } from 'src/app/services/user-login/user-auth.service';\nimport { UserRegistrationService } from 'src/app/services/user-registration/user-registration.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  \n  myFormGroup : FormGroup;\n  emailValid : boolean = false;\n  prePasswordCheck : boolean = false;\n  passwordValidation :boolean = false;\n  passwordLength : boolean = false;\n  showElement : boolean = false;\n  phoneValidation : boolean = false;\n  phoneValidationIsNan : boolean = false;\n  noMMatching : boolean = false;\n\n  constructor(public router : Router , formBuilder : FormBuilder, public forgotService : UserAuthService) {\n    this.myFormGroup=formBuilder.group({\n      \"email\" : new FormControl(\"\",[Validators.required]),\n      \"contact\" : new FormControl(\"\", [Validators.required]),\n      \"password\" : new FormControl(\"\", [Validators.required]),\n      \"rePassword\" : new FormControl(\"\", [Validators.required])\n    })\n   }\n\n\n  //Validation of email\n\n   emailValidation(email : HTMLInputElement){\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value))\n    {\n      this.emailValid = false;\n      this.noMMatching = false;\n      // console.log(this.emailValid)\n    }\n    else{\n  \n      this.emailValid = true;\n\n      // console.log(this.emailValid)\n    }\n    if(email.value.length==0){\n      this.emailValid = false\n    }\n  }  \n\n  \n  \n  //check if password and repassword are same\n\n   checkPassword(password : HTMLInputElement,rePassword : HTMLInputElement){\n    \n    // console.log(password.value,rePassword.value);\n    if(password.value.length!=0){\n        this.prePasswordCheck = false;\n          if(password.value == rePassword.value || rePassword.value.length==0){\n              this.passwordValidation = false;\n            }else{\n                this.passwordValidation = true;\n            }\n          }else{\n                this.prePasswordCheck = true;\n    }\n    if(rePassword.value.length==0){\n      this.prePasswordCheck = false;\n    }\n    if(this.prePasswordCheck){\n      rePassword.value=\"\";\n    }\n  }\n\n  // Check prePassword\n  checkPrePassword(password : HTMLInputElement ){\n    if(password.value.length>=6 && password.value.length<=12){\n      this.passwordLength = false;\n      }\n      else{\n        this.passwordLength = true;\n      }\n    if(password.value.length!=0){\n      this.prePasswordCheck = false;\n    }else{\n      this.passwordLength = false;\n    }\n  } \n  \n  // phone number validation\n  phoneNumberValidaton(number : HTMLInputElement){\n    let mobilePattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\n    if(number.value.match(mobilePattern) || number.value.length==0){\n      \n      this.phoneValidation = false;\n    }else{\n      this.phoneValidation = true;\n    }\n    if(!Number.isNaN(parseInt(number.value)) || number.value.length==0 ){\n      this.phoneValidationIsNan = false;\n      this.noMMatching = false;\n    }\n    else{\n      this.phoneValidationIsNan = true;\n    }\n  }\n\n  // for updating the password\n  forgot(){\n    if(this.emailValid == false &&\n       this.passwordValidation == false &&\n       this.phoneValidation == false &&\n       this.myFormGroup.controls['email'].value.length!=0 &&\n       this.myFormGroup.controls['password'].value.length!=0 &&\n       this.myFormGroup.controls['rePassword'].value.length!=0 &&\n       this.myFormGroup.controls['contact'].value.length!=0){\n      let username = this.myFormGroup.controls['email'].value;\n      let newPassword = this.myFormGroup.controls['password'].value;\n      let contact = this.myFormGroup.controls['contact'].value;\n      this.forgotService.forgotPassword(username,newPassword,contact)\n      .subscribe((response)=>{\n        //  console.log(response);\n        this.showElement = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.showElement = false;\n          this.router.navigate(['/login'])\n        }.bind(this), 3000);\n        this.myFormGroup.controls['email'].reset()\n        this.myFormGroup.controls['password'].reset()\n        this.myFormGroup.controls['rePassword'].reset()   \n      },\n      // failure function\n      failureData => {\n        this.noMMatching = true;\n        // alert(\"Error Occurred !! Please Try Again\")\n        //  console.log(failureData);\n      })}else{\n        alert(\"Enter Valid Details!!\")\n      }\n    }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"logo\"> <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\" twitter-logo\">\n    </div>\n    <div class=\"text-center mt-2 name\"> Update-Password </div>\n    <div *ngIf=\"showElement\" class=\" msg mt-1\">\n        <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>Password Updated!</strong>\n        </div>\n    </div>\n    <form class=\"p-3 mt-1 formgroup\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"forgot()\">\n\n        <label for=\"email\">Email: </label>\n        <div class=\"form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"text\" name=\"email\" id=\"email\" required [formControl]=\"myFormGroup.controls['email']\" [ngClass]=\"{'warningOutline' : emailValid}\" (keyup)=\"emailValidation(email)\" #email placeholder=\"Enter your Email\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"emailValid\">Enter Valid Email Id</small>\n            </div>\n        </div>\n\n        <label for=\"contact\">Contact number: </label>\n        <div class=\" form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"text\" name=\"contact\" id=\"contact\" required [formControl]=\"myFormGroup.controls['contact']\" (keyup)=\"phoneNumberValidaton(contact)\" [ngClass]=\"{'warningOutline' : phoneValidation}\" #contact placeholder=\"Enter your contact number\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"phoneValidation\">Enter Valid PhoneNumber</small>\n            </div>\n            <div class=\"text-danger\"> <small *ngIf=\"phoneValidationIsNan\">Enter numbers only!</small></div>\n        </div>\n\n\n        <label for=\"password\">New Password: </label>\n        <div class=\" form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"password\" name=\"password\" id=\"password\" required [formControl]=\"myFormGroup.controls['password']\" (keyup)=\"checkPrePassword(password)\" #password placeholder=\"Enter new password\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordLength\">password length must be between 6 to 12 characters </small>\n            </div>\n        </div>\n\n\n        <label for=\"rePassword\">Confirm new password: </label>\n        <div class=\" form-field d-flex flex-column\">\n            <input class=\"custom-field form-control shadow-none\" type=\"password\" name=\"rePassword\" id=\"repassword\" required [formControl]=\"myFormGroup.controls['rePassword']\" type=\"password\" [ngClass]=\"{'warningOutline' : passwordValidation}\" (keyup)=\"checkPassword(password,rePassword)\"\n                #rePassword placeholder=\"Enter password again\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordValidation\">Password didn't matched</small>\n            </div>\n            <div class=\"text-danger\"> <small *ngIf=\"prePasswordCheck\">Enter password first</small></div>\n        </div>\n\n\n        <button class=\"btn mt-3\">Update Password</button>\n        <div class=\"text-center mt-3\">\n            <small *ngIf=\"noMMatching\" class=\"text-danger\">Entered Email Id and Contact Number didn't match !</small>\n        </div>\n    </form>\n    <div class=\"text-center fs-6\"> <a [routerLink]=\"['/login']\"> back to login</a> or <a [routerLink]=\"['/register']\">Sign up</a> </div>\n</div>","\nimport { LocationStrategy } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationRequest } from 'src/app/model/authentication-request.model';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { UserAuthService } from 'src/app/services/user-login/user-auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  myFormGroup : FormGroup;\n  emailValid : boolean = false;\n  nullValueErrorMessage : boolean = false;\n  data : Array<UserModel>;\n  invalid : boolean = false;\n  \n  constructor(formBuilder : FormBuilder , public router : Router , public  loginService : UserAuthService ) {\n    this.myFormGroup=formBuilder.group({\n      \"email\" : new FormControl(\"\",[Validators.required, Validators.email]),\n      \"password\" : new FormControl(\"\", [Validators.required])\n    })\n   }\n\n  \n\n\n\n  \n   emailValidation(email : HTMLInputElement){\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value))\n    {\n      this.emailValid = false;\n      // console.log(this.emailValid)\n    }\n    else{\n  \n      this.emailValid = true;\n      // console.log(this.emailValid)\n    }\n    if(email.value.length==0){\n      this.emailValid = false\n    }else{\n      this.nullValueErrorMessage = false;\n    }\n  }  \n\n  passwordEmpty(){\n    if(this.myFormGroup.controls['password'].value.length!=0){\n      this.nullValueErrorMessage = false;\n    }\n    else{\n      this.nullValueErrorMessage = true;\n    }\n  }\n\n  //login of user method\n  login(){\n    if(this.myFormGroup.controls['email'].value.length!=0 && this.myFormGroup.controls['password'].value.length!=0){\n  \n    let userCredentials = new AuthenticationRequest(this.myFormGroup.controls['email'].value,this.myFormGroup.controls['password'].value)\n    this.loginService.login(userCredentials).subscribe((successData)=>{\n      // console.log(\"succ\");\n      // console.log(\"LOGIN SUCCESS\");\n      sessionStorage.setItem(\"user\",userCredentials.username);\n      sessionStorage.setItem(\"firstName\",successData.firstName);\n      sessionStorage.setItem(\"lastName\",successData.lastName);\n      sessionStorage.setItem(\"password\",successData.password);\n      this.router.navigate(['/home']);\n      // console.log(successData)\n    },failureData => {\n      // console.log(\"fail\");\n      this.invalid = true;\n      // console.log(failureData);\n    })\n\n    this.nullValueErrorMessage = false;\n  }\n  else{\n    this.nullValueErrorMessage = true;\n  }\n}\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"logo\"> <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\" twitter-logo\">\n    </div>\n    <div class=\"text-center mt-4 name\"> Login </div>\n    <form class=\"p-3 mt-3\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"login()\">\n\n        <label for=\"email\">Email: </label>\n        <div class=\"form-field d-flex flex-column\">\n            <input class=\"custom-field form-control\" type=\"text\" name=\"email\" id=\"email\" placeholder=\"Enter your Email\" required [formControl]=\"myFormGroup.controls['email']\" [ngClass]=\"{'warningOutline' : emailValid}\" (keyup)=\"emailValidation(email)\" #email>\n        </div>\n\n        <label for=\"password\">Password: </label>\n        <div class=\"form-field d-flex flex-column\">\n            <input class=\"custom-field form-control\" type=\"password\" name=\"password \" id=\"password\" placeholder=\"Enter your password\" required [formControl]=\"myFormGroup.controls['password']\" #password (keyup)=\"passwordEmpty()\">\n        </div>\n        <button class=\"btn form-group mt-3\">Login</button>\n\n        <div class=\"text-danger text-center mt-3 \">\n            <small *ngIf=\"invalid \">Invalid <b> Credentials!</b> </small>\n        </div>\n        <div class=\"text-danger text-center mt-3 \">\n            <small *ngIf=\"nullValueErrorMessage \">Enter both <b>Email</b> and <b>Password</b> </small>\n        </div>\n    </form>\n    <div class=\"text-center \"> <a [routerLink]=\"[ '/forgot'] \">Forget password?</a> or <a [routerLink]=\"[ '/register'] \">Sign up</a> </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Email } from 'src/app/model/email.model';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { UserRegistrationService } from 'src/app/services/user-registration/user-registration.service';\n\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.css']\n})\nexport class RegistrationPageComponent implements OnInit {\n\n  myFormGroup: FormGroup;\n  passwordValidation: boolean = false;\n  prePasswordCheck: boolean = false;\n  passwordLength: boolean = false;\n  emailValid: boolean = false;\n  //contactValid : boolean = false;\n  phoneValidation: boolean = false;\n  phoneValidationIsNan: boolean = false;\n  sussesfullyRegistered: boolean = false;\n  showElement: boolean = false;\n  userDate: Date;\n  emailNotAvailable: boolean = false;\n\n  usersList: Array<UserModel>\n  email: Array<Email>\n\n  constructor(formbuilder: FormBuilder, public router: Router, public userRegistrationService: UserRegistrationService) {\n    this.myFormGroup = formbuilder.group({\n      \"firstName\": new FormControl(\"\", [Validators.required]),\n      \"lastName\": new FormControl(\"\", [Validators.required]),\n      \"email\": new FormControl(\"\", [Validators.required]),\n      \"password\": new FormControl(\"\", [Validators.required]),\n      \"rePassword\": new FormControl(\"\", [Validators.required]),\n      \"date\": new FormControl(\"\", Validators.required),\n      \"contact\": new FormControl(\"\", Validators.required)\n    })\n  }\n\n\n\n\n\n\n  //check if password and repassword are same\n\n  checkPassword(password: HTMLInputElement, rePassword: HTMLInputElement) {\n    if (password.value.length != 0) {\n      this.prePasswordCheck = false;\n      if (password.value == rePassword.value || rePassword.value.length == 0) {\n        this.passwordValidation = false;\n      } else {\n        this.passwordValidation = true;\n      }\n    } else {\n      this.prePasswordCheck = true;\n    }\n    if (rePassword.value.length == 0) {\n      this.prePasswordCheck = false;\n    }\n    if (this.prePasswordCheck) {\n      rePassword.value = \"\";\n    }\n  }\n\n  // Check prePassword\n  checkPrePassword(password: HTMLInputElement) {\n    if (password.value.length >= 6 && password.value.length <= 12) {\n      this.passwordLength = false;\n    }\n    else {\n      this.passwordLength = true;\n    }\n    if (password.value.length != 0) {\n      this.prePasswordCheck = false;\n    } else {\n      this.passwordLength = false;\n    }\n  }\n\n  //Email Validation\n\n  emailValidation(email: HTMLInputElement) {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email.value)) {\n      this.emailValid = false;\n    }\n    else {\n      this.emailValid = true;\n    }\n    if (email.value.length == 0) {\n      this.emailValid = false\n    }\n  }\n\n  // validate Phone number\n  phoneNumberValidaton(number: HTMLInputElement) {\n    let mobilePattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\n    if (number.value.match(mobilePattern) || number.value.length == 0) {\n      this.phoneValidation = false;\n    } else {\n      this.phoneValidation = true;\n    }\n    if (!Number.isNaN(parseInt(number.value)) || number.value.length == 0) {\n      this.phoneValidationIsNan = false;\n    }\n    else {\n      this.phoneValidationIsNan = true;\n    }\n  }\n\n\n  //change date format to YYYY-MM-DD\n  checkDate() {\n    // console.log(\"called check date\")\n    this.userDate = this.myFormGroup.controls['date'].value;\n    // console.log(this.userDate);\n  }\n\n\n\n\n\n  //registering the user\n\n  register() {\n    // console.log(this.emailValid,this.passwordLength,this.passwordValidation,this.phoneValidation);\n    if (!this.emailValid &&\n      !this.passwordLength &&\n      !this.passwordValidation &&\n      !this.phoneValidation) {\n\n      if (this.myFormGroup.controls['firstName'].value.length != 0 &&\n        this.myFormGroup.controls['lastName'].value.length != 0 &&\n        this.myFormGroup.controls['email'].value.length != 0 &&\n        this.myFormGroup.controls['password'].value.length != 0 &&\n        this.myFormGroup.controls['rePassword'].value.length != 0 &&\n        this.myFormGroup.controls['contact'].value.length != 0) {\n\n        let user = new UserModel(\n          this.myFormGroup.controls['email'].value,\n          this.myFormGroup.controls['firstName'].value,\n          this.myFormGroup.controls['lastName'].value,\n          this.myFormGroup.controls['email'].value,\n          this.myFormGroup.controls['password'].value,\n          this.myFormGroup.controls['contact'].value,\n        )\n\n        this.userRegistrationService.addNewUser(user).subscribe((response) => {\n          // console.log(response);\n          // console.log(\"register user\");\n          this.myFormGroup.controls['firstName'].reset();\n          this.myFormGroup.controls['lastName'].reset();\n          this.myFormGroup.controls['email'].reset();\n          this.myFormGroup.controls['password'].reset();\n          this.myFormGroup.controls['rePassword'].reset();\n          this.myFormGroup.controls['contact'].reset();\n          this.showElement = true;\n          setTimeout(function () {\n            // console.log('hide');\n            this.showElement = false;\n            this.router.navigate(['/login'])\n          }.bind(this), 3000);\n        },\n          // failure function\n          failureData => {\n            // console.log(failureData);\n            //alert(\"email alredy taken\")\n            this.emailNotAvailable = true;\n            setTimeout(function () {\n              // console.log('hide');\n              this.emailNotAvailable = false;\n            }.bind(this), 3000);\n          });\n      }\n      else {\n        alert(\"Required every Field\");\n      }\n    } else {\n      alert(\"enter valid details\");\n    }\n\n  }\n\n\n\n  ngOnInit(): void {\n    this.userRegistrationService.getAllUsers();\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"logo\"> <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\"\">\n    </div>\n    <div class=\"text-center mt-3 name\"> Register </div>\n    <form class=\"p-3 mt-2 formgroup\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"register()\">\n        <!-- REGISTERED SUCCESSFULLY DIV -->\n        <div class=\"col-lg-3\">\n            <div *ngIf=\"showElement\" class=\"msg mt-1\">\n                <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                    <strong>Registered successfully!</strong>\n                </div>\n            </div>\n        </div>\n        <!-- REGISTERED SUCCESSFULLY DIV -->\n\n        <label for=\"firstName\">First Name: </label>\n        <div class=\"form-field d-flex flex-column  mb-2\">\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" class=\"mb-2 form-control shadow-none\" [formControl]=\"myFormGroup.controls['firstName']\" #firstName placeholder=\"Enter your firstName\">\n        </div>\n\n\n        <label for=\"lastName\">Last Name: </label>\n        <div class=\"form-field d-flex flex-column mb-2\">\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['lastName']\" #lastName placeholder=\"Enter your last name\">\n        </div>\n\n\n        <label for=\"email\">Email: </label>\n        <div class=\"form-field d-flex flex-column  mb-2\">\n            <input type=\"text\" name=\"email\" id=\"userEmail\" class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['email']\" [ngClass]=\"{'warningOutline' : emailValid,'warningOutline1' : emailNotAvailable}\" #email (keyup)=\"emailValidation(email)\"\n                placeholder=\"Enter your email address\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"emailValid\">Enter Valid Email Id</small>\n            </div>\n            <div class=\"text-danger\"><small *ngIf=\"emailNotAvailable\">Entered Email already taken!!</small>\n            </div>\n        </div>\n\n\n        <label for=\"contact\">contact no: </label>\n        <div class=\"form-field d-flex flex-column mb-2\">\n            <input type=\"text\" name=\"contact\" id=\"contact\" #contact class=\"mb-1 form-control shadow-none\" (keyup)=\"phoneNumberValidaton(contact)\" [ngClass]=\"{'warningOutline' : phoneValidation}\" [formControl]=\"myFormGroup.controls['contact']\" placeholder=\"Enter Contact Number\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"phoneValidation\">Enter Valid Phone Number </small>\n            </div>\n            <div class=\"text-danger\">\n                <small *ngIf=\"phoneValidationIsNan\">Enter numbers only!</small>\n            </div>\n        </div>\n\n\n        <label for=\"password\">Password: </label>\n        <div class=\"form-field d-flex flex-column  mb-2\">\n            <input type=\"password\" name=\"password\" id=\"password\" #password class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['password']\" (keyup)=\"checkPrePassword(password)\" placeholder=\"Enter password\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordLength\">password should be greater than 6 and less than 12 characters </small>\n            </div>\n        </div>\n\n\n\n        <label for=\"re-password\">confirm password: </label>\n        <div class=\"form-field d-flex flex-column mb-2\">\n            <input type=\"password\" name=\"re-password\" id=\"password\" #rePassword class=\"mb-1 form-control shadow-none\" [formControl]=\"myFormGroup.controls['rePassword']\" [ngClass]=\"{'warningOutline' : passwordValidation}\" (keyup)=\"checkPassword(password,rePassword)\"\n                placeholder=\"confirm password\">\n            <div class=\"text-danger\">\n                <small *ngIf=\"prePasswordCheck\">Enter password first</small>\n            </div>\n            <div class=\"text-danger\">\n                <small *ngIf=\"passwordValidation\">Password didn't matched</small>\n            </div>\n        </div>\n\n        <button class=\"btn mt-3\">Register</button>\n    </form>\n    <div class=\"text-center fs-6\"> Already a user ? <a [routerLink]=\"['/login']\">Back to Login</a> </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotPasswordComponent } from './AuthContainer/forgot-password/forgot-password.component';\nimport { LoginPageComponent } from './AuthContainer/login-page/login-page.component';\nimport { RegistrationPageComponent } from './AuthContainer/registration-page/registration-page.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { AuthGuardService } from './services/auth-guard/auth-guard.service';\nimport { PostTweetsPageComponent } from './user-activity-container/post-tweets-page/post-tweets-page.component';\nimport { HomeComponent } from './user-activity-container/home/home.component';\nimport { UserProfileComponent } from './user-activity-container/user-profile/user-profile.component';\nimport { ViewUsersPageComponent } from './user-activity-container/view-users-page/view-users-page.component';\nimport { ViewUsersTweetsComponent } from './user-activity-container/view-users-tweets/view-users-tweets.component';\n\n\nconst routes: Routes = [\n  {path : \"\" , redirectTo : \"login\", pathMatch : \"full\"},\n  {path : \"login\", component : LoginPageComponent},\n  // {path:'register', loadChildren:()=>import('./login-registration-container/registration-page/registration-page.component').then(m=>m.RegistrationPageComponent)},\n  {path : \"register\", component : RegistrationPageComponent},\n  {path : \"show-tweet\", component : UserProfileComponent,canActivate : [AuthGuardService]},\n  {path : \"home\", component : HomeComponent,canActivate : [AuthGuardService]},\n  {path : \"profile\", component : UserProfileComponent,canActivate : [AuthGuardService]},\n  {path : \"post\", component : PostTweetsPageComponent,canActivate : [AuthGuardService]},\n  {path : \"users\", component : ViewUsersPageComponent,canActivate : [AuthGuardService]},\n  {path : \"user-tweets/:username\", component : ViewUsersTweetsComponent,canActivate : [AuthGuardService]},\n  {path : \"forgot\", component : ForgotPasswordComponent},\n  {path : \"**\", component: ErrorPageComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TweetApp';\n}\n","<div class=\"container-fluid\">\r\n    <!--dust particel-->\r\n    <div>\r\n        <div class=\"starsec\"></div>\r\n        <div class=\"starthird\"></div>\r\n        <div class=\"starfourth\"></div>\r\n        <div class=\"starfifth\"></div>\r\n    </div>\r\n    <!--Dust particle end--->\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NavBarComponent } from './user-activity-container/nav-bar/nav-bar.component';\nimport { ScrollTopComponent } from './user-activity-container/user-scroll-top/scroll-top.component';\nimport { UserProfileComponent } from './user-activity-container/user-profile/user-profile.component';\nimport { PostTweetsPageComponent } from './user-activity-container/post-tweets-page/post-tweets-page.component';\nimport { ViewUsersPageComponent } from './user-activity-container/view-users-page/view-users-page.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FooterComponent } from './user-activity-container/footer/footer.component';\nimport { HomeComponent } from './user-activity-container/home/home.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { LoginPageComponent } from './AuthContainer/login-page/login-page.component';\nimport { RegistrationPageComponent } from './AuthContainer/registration-page/registration-page.component';\nimport { ForgotPasswordComponent } from './AuthContainer/forgot-password/forgot-password.component';\nimport { ViewUsersTweetsComponent } from './user-activity-container/view-users-tweets/view-users-tweets.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    RegistrationPageComponent,\n    UserProfileComponent,\n    PostTweetsPageComponent,\n    NavBarComponent,\n    ScrollTopComponent,\n    ViewUsersPageComponent,\n    ViewUsersTweetsComponent,\n    ForgotPasswordComponent,\n    ErrorPageComponent,\n    FooterComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-wrap d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-12 text-center\">\n                <span class=\"display-1 d-block\">404</span>\n                <div class=\"mb-4 lead\">The page you are looking for was not found.</div>\n                <a [routerLink]=\"['/login']\" class=\"btn btn-link\">Back to Home</a>\n            </div>\n        </div>\n    </div>\n</div>\n","export class UserModel{\r\n    username : string;\r\n    firstName : string;\r\n    lastName : string;\r\n    email : string;\r\n    password : string;\r\n    contactNum : string;\r\n\r\n    constructor(username, firstName, lastName, email, password, contactNum){\r\n        this.username = username;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email =  email;\r\n        this.password = password;\r\n        this.contactNum = contactNum;\r\n    }\r\n}","export class AuthenticationRequest{\r\n    username : string;\r\n    password : string;\r\n\r\n    constructor(username,password){\r\n        this.username = username\r\n        this.password = password\r\n    }\r\n}","export class NewPassword{\r\n    newPassword :  string;\r\n    contact : string;\r\n    constructor(newPassword, contact){\r\n        this.newPassword = newPassword;\r\n        this.contact = contact;\r\n    }\r\n}","export class Reply{\r\n    comment : string;\r\n    constructor(comment){\r\n        this.comment = comment;\r\n    }\r\n}","import { Comment } from \"./comment.model\";\r\n\r\nexport class Tweet{\r\n    tweetId : number;\r\n    username : string;\r\n    tweetText : string;\r\n    firstName : string;\r\n    lastName : string;\r\n    tweetDate : Date\r\n    comments  : Array<Comment>\r\n    likes : Array<string>\r\n\r\n    //posting the tweet\r\n    constructor(username, tweetText , firstName , lastName , tweetDate ){\r\n        this.username =  username;\r\n        this.tweetText = tweetText;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.tweetDate = tweetDate;\r\n    }\r\n    \r\n    }\r\n    ","export class TweetUpdate{\r\n    tweetId : string;\r\n    tweetText : string;\r\n    constructor(tweetId , tweetText){\r\n        this.tweetId = tweetId;\r\n        this.tweetText = tweetText;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(public router : Router) { }\n  \n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if(this.isUserLoggedIn())\n        return true;\n    else{\n      this.router.navigate(['/login']);\n      return false;\n    }    \n        \n}\n\n  isUserLoggedIn(): boolean{\n    let user = sessionStorage.getItem('user');\n    if(user == null)\n      return false;\n    return true;  \n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Reply } from 'src/app/model/reply.model';\nimport { Tweet } from 'src/app/model/tweet.model';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { TweetUpdate } from 'src/app/model/tweetUpdate.model';\nimport {map} from 'rxjs/operators';\n\nconst API_URL = \"http://localhost:8082/api/v1.0\"\nexport const Search_URL = \"http://localhost:8082/api/v1.0/tweets/user/search/\";\nexport const Search_User_URL = \"http://localhost:8082/api/v1.0/tweets/user/profile/\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetsService {\n\n  constructor(public http  : HttpClient) { }\n\n  getAllTweets(userName : string ) : Observable<TweetResponse[]>{\n    let headers = new HttpHeaders({'loggedInUser': sessionStorage.getItem('user')});\n    return this.http.get<TweetResponse[]>(API_URL+\"/tweets/all\",{headers});\n  }\n  \n  getAllTweetsOfUser(userName : string ) : Observable<TweetResponse[]>{\n    let headers = new HttpHeaders({'loggedInUser': sessionStorage.getItem('user')});\n    return this.http.get<TweetResponse[]>(API_URL+\"/tweets/\"+userName,{headers});\n  }\n\n  searchUser(name : string) : any{\n    return this.http.get(Search_URL+name);\n  }\n\n  userDetails(name: string) :any {\n    return this.http.get(Search_User_URL+name);\n  }\n\n  replyTweet(reply : string ,id : string){\n    // let headers = new HttpHeaders({'tweetReply': reply});\n    // console.log(id , reply);\n    let cmt = new Reply(reply);\n    return this.http.post(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/reply/\"+id,cmt).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );;\n  }\n\n  likeTweet(id : string){\n    // let headers = new HttpHeaders({'tweetId':id});\n    return this.http.put(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/like/\"+id,null).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n\n  disLikeTweet(id : string){\n    // let headers = new HttpHeaders({'tweetId':id});\n    return this.http.put(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/dislike/\"+id,null).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n\n  editTweet(id : string){\n    return this.http.get(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/\"+id);\n  }\n\n  updateTweet(id : string, text : string){\n    let tweetUpdate = new TweetUpdate(id,text);\n    // let headers = new HttpHeaders({'tweetText': text,'tweetId' : id});\n    return this.http.put(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/update\",tweetUpdate).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n\n  postTweet(tweet : Tweet){\n    return this.http.post(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/add\",tweet);\n  }\n  \n  \n  deleteTweet(id : string){\n    let headers = new HttpHeaders({'tweetId':id});\n    //headers.append(\"tweetId\",id);\n    return this.http.delete(API_URL+\"/tweets/\"+sessionStorage.getItem('user')+\"/delete\",{headers}).pipe(\n      map((successData : Response)=>{\n        // console.log(\"success\")\n        // console.log(successData)\n        return \"success\";\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );;\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthenticationRequest } from 'src/app/model/authentication-request.model';\nimport {map} from 'rxjs/operators';\nimport { NewPassword } from 'src/app/model/newpassword.model';\n\nconst API_URL = \"http://localhost:8082/api/v1.0/tweets/login\";\nexport const Forgot_URL=\"http://localhost:8082/api/v1.0/tweets\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n  test: Array<{firstName:string, lastName:string}> = [];\n  constructor(public http : HttpClient) { }\n  login(details : AuthenticationRequest):any{\n    return this.http.post(API_URL,details).pipe(\n      map((successData : Response)=>{\n        // console.log(successData); \n        return successData;\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n  forgotPassword(username : string, password : string, contact : string):any{\n    let newPassword = new NewPassword(password,contact);\n    // console.log(newPassword);\n    return this.http.put(Forgot_URL+\"/\"+username+\"/forgot\",newPassword).pipe(\n      map((successData : Response)=>{\n        // console.log(successData); \n        return successData;\n      }),\n      map(failureData=>{\n        // console.log(failureData);\n        return failureData;\n      })\n    );\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport {map} from 'rxjs/operators';\n\nexport const API_URL=\"http://localhost:8082/api/v1.0/tweets/register\";\nexport const Users_URL =\"http://localhost:8082/api/v1.0/tweets/users/all\";\nexport const Search_URL = \"http://localhost:8082/api/v1.0/tweets/user/search/\";\nexport const Forgot_URL=\"http://localhost:8082/api/v1.0/tweets\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistrationService {\n\n  constructor(public http : HttpClient) {}\n\n  addNewUser(user : UserModel){\n    return this.http.post(API_URL,user).pipe(\n      map((successData : Response)=>{\n        // console.log(successData)\n        return successData;\n      }),\n      map(failureData=>{\n        // console.log(failureData.status);\n        return failureData;\n      }));\n    }\n  \n  getAllUsers() : any{\n    return this.http.get(Users_URL);\n  }\n\n  searchUser(name : string) : any{\n    return this.http.get(Search_URL+name);\n  }\n \n  forgotPassword(username : string, password : string):any{\n    // let headers = new HttpHeaders({\n    //   newPassword : password\n    // });\n    // let headers = new HttpHeaders().set('newPassword', password);\n    let headers = new HttpHeaders({newPassword : password})\n    // console.log(headers);\n    return this.http.put(Forgot_URL+\"/\"+username+\"/forgot\",{headers});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  copyright_name = \"Parichay Gupta\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"sticky-footer\" class=\"py-4 bg-dark text-white-50\">\n    <div class=\"container d-flex justify-content-around\">\n        <small class=\"fs-5\">Copyright &copy; Twitter App </small>\n        <div>\n            <small class=\"fs-5\"> Created by : {{ copyright_name }}</small>\n        </div>\n        <div class=\"social-icons d-flex justify-content-around align-self-stretch\">\n            <a class=\"bi bi-github mx-3\" href=\"https://github.com/parichaygupta\" target=\"_blank\"></a>\n            <a class=\"bi bi-linkedin mx-3\" href=\"https://linkedin.com/in/parichay-gupta\" target=\"_blank\"></a>\n            <a class=\"bi bi-globe mx-3\" href=\"https://parichaygupta.github.io/my-portfolio\" target=\"_blank\"></a>\n            <a class=\"bi bi-instagram mx-3\" href=\"https://instagram.com/parichay.gupta\" target=\"_blank\"></a>\n            <a class=\"bi bi-whatsapp mx-3\" href=\"https://wa.me/+917737424939\" target=\"_blank\"></a>\n        </div>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\nimport { UserAuthService } from 'src/app/services/user-login/user-auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  myFormGroup : FormGroup;\n  today= new Date();\n  todaysDataTime = '';\n  clickedReplyButton : {[key: number] : boolean} ={};\n  enablePostButton : boolean = false;\n  showElement : boolean = false;\n  searchedUserTweets : string;\n  tweets : TweetResponse[];\n  returnedTweets : TweetResponse[];\n  noTweets : boolean = false;\n  likedTweetPopup : boolean = false;\n  disLikedTweetPopup : boolean = false;\n \n  constructor(formBuilder : FormBuilder, public activeRoute : ActivatedRoute , public tweetService : TweetsService) {\n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530');\n    this.myFormGroup=formBuilder.group({\n      \"reply\" : new FormControl(\"\",Validators.required),\n    })\n\n  }\n\n\n  likeTweet(id : string){\n    // console.log(id);\n    this.tweetService.likeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.likedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.likedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n  \n  disLikeTweet(id : string){\n    // console.log(id);\n    this.tweetService.disLikeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.disLikedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.disLikedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n\n\n  isReplyClicked(index : number){\n    // console.log(index);\n    if(this.clickedReplyButton[index]==false){\n    this.clickedReplyButton[index] = true;\n  }\n    else\n    this.clickedReplyButton[index] = false;\n  }\n  \n  replyTweet(id : string){\n    let reply = this.myFormGroup.controls['reply'].value;\n    if(reply.length==0){\n      alert(\"Reply can't be empty\");\n    }\n    else{\n        // alert(\"commented!\");\n        //console.log(id)\n        this.tweetService.replyTweet(reply,id).subscribe((response=>{\n          console.log(response);\n          if(response==\"success\"){\n            this.myFormGroup.controls['reply'].reset();\n            this.showElement = true;\n            this.getAllTweets();\n            setTimeout(function() {\n              // console.log('hide');\n              this.showElement = false;\n            }.bind(this), 3000);\n          }\n          \n        }),\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n        \n      }\n    }\n  \n  getAllTweets(){\n   \n    this.tweetService.getAllTweets(this.searchedUserTweets).subscribe(response =>{\n      let currentUser =  sessionStorage.getItem('user');\n      this.returnedTweets = response;\n      // console.log(this.returnedTweets);\n      // console.log(currentUser);\n      this.tweets = response;\n      \n         console.log(this.tweets);\n        if(this.tweets.length!=0){\n          this.noTweets = false;\n        }else{\n          this.noTweets = true;\n        }        \n      });  \n  }\n  \n  showButton(){\n    let reply = this.myFormGroup.controls['reply'].value;\n    // console.log(reply);\n    if(reply.length==0){\n      this.enablePostButton = false;\n    }else{\n      this.enablePostButton = true;\n    }\n  }\n\n\n  ngOnInit(): void {\n      this.getAllTweets();\n      \n      // setInterval(()=>{\n      //   // console.log(\"called set interval\");\n      //   this.getAllTweets();\n      // },5000) \n    }    \n\n}","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div *ngIf=\"showElement\" class=\"msg mt-1 text-center\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Commented!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"likedTweetPopup\" class=\" msg mt-1 text-center\">\n    <div id=\" alert-dismissible \" class=\"alert alert-success alert-dismissible fade show \" role=\"alert \">\n        <strong>Liked!</strong>\n    </div>\n</div>\n<div *ngIf=\"disLikedTweetPopup \" class=\" msg mt-1 text-center\">\n    <div id=\"alert-dismissible \" class=\"alert alert-danger alert-dismissible fade show \" role=\"alert \">\n        <strong>DisLiked!</strong>\n    </div>\n</div>\n\n<div class=\"container mt-4 \">\n\n\n    <div *ngIf=\"noTweets \" class=\"py-3 mt-4 text-center \">\n        <h3 class=\"mt-4 \">No tweets to display!!</h3>\n        <a [routerLink]=\"[ '/post'] \">Post the first tweet</a>\n    </div>\n\n    <!-- card to display -->\n    <div class=\"wrapper \" *ngFor=\"let tweet of tweets; index as i \">\n\n\n        <div class=\"top-section d-flex justify-content-between me-2 \">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png \" alt=\" twitter-logo \">\n            <div class=\"text-center mt-2 pe-5 align-self-center name \"> {{tweet.firstName}} {{tweet.lastName}} </div>\n            <div class=\"text-center pe-5 align-self-center tweetDate\"> {{tweet.tweetDate}} </div>\n\n        </div>\n        <div class=\"mid-section d-flex ps-4 pe-4 mt-4 \">\n            <p class=\"post-content text-justify text-dark \"> {{tweet.tweetText}}\n            </p>\n        </div>\n\n        <div class=\"bottom-section d-flex justify-content-around ps-4 mt-2 \">\n\n            <span *ngIf=\"!tweet.likeStatus \" class=\"col-4 \" (click)=\"likeTweet(tweet.tweetId) \"><i class=\"bi bi-heart text-primary \"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <span *ngIf=\"tweet.likeStatus \" (click)=\"disLikeTweet(tweet.tweetId) \" class=\"col-4 \"><i\n                class=\"bi bi-heart-fill text-danger \"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <button class=\"btn col-4 shadow-none \"><i (click)=\"isReplyClicked(i) \"\n                class=\"bi bi-chat-left-text text-primary \" ></i>&nbsp; {{tweet.commentsCount}}</button>\n        </div>\n\n        <hr class=\"divider bg-dark \" *ngIf=\"clickedReplyButton[i] \">\n        <label class=\"font-weight-bold \" *ngIf=\"clickedReplyButton[i] \">Replies</label>\n\n        <div *ngIf=\"clickedReplyButton[i] \" class=\"scroll mt-3 p-2 \">\n            <div *ngFor=\"let com of tweet.comments \" class=\"comments-section row d-flex flex-column justify-content-around \">\n                <h6 class=\"ml-2 col \">\n                    {{com.username}}\n                </h6>\n                <p class=\"ml-2 col border-bottom border-dark \">{{com.comment}}</p>\n            </div>\n        </div>\n\n\n        <hr *ngIf=\"clickedReplyButton[i] \" />\n        <form class=\"formgroup \" *ngIf=\"clickedReplyButton[i] \" [formGroup]=\"myFormGroup \" (ngSubmit)=\"replyTweet(tweet.tweetId) \">\n\n            <textarea class=\"mb-1 form-control \" id=\"textarea \" [formControl]=\"myFormGroup.controls[ 'reply'] \" placeholder=\"Write your comment, it should less than 144 characters!! \" name=\"reply \" maxlength=\"144 \" rows=\"3 \"></textarea>\n            <button class=\"btn comment-button me-2 mt-3 \" type=\"submit \">comment</button>\n        </form>\n\n    </div>\n\n    <app-scroll-top></app-scroll-top>\n</div>\n\n\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  name : string;\n  constructor() {}\n  \n  logout(){\n    // console.log(\"logout called!\")\n    sessionStorage.clear();\n  }\n\n  ngOnInit(): void {\n    this.name = sessionStorage.getItem('firstName').toLocaleUpperCase();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container\">\n        <div>\n            <a class=\"navbar-brand\" [routerLink]=\"['/home']\">\n                <img src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-bird-symbols-png-logo-0.png\" alt=\"Tweet-app-logo\" class=\"d-inline\">\n            </a>\n            <a class=\"navbar-brand fs-4\" [routerLink]=\"['/home']\">\n                <span class=\"text-uppercase font-weight-bold\">TweetApp</span>\n            </a>\n        </div>\n\n\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation \">\n    <span class=\"navbar-toggler-icon\" ><i class=\"bi bi-three-dots\" style=\"color:#fff; font-size:28px;\"></i></span>\n    </button>\n\n        <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarText\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/home']\">Home</button>\n                </li>\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/profile']\">Profile</button>\n                </li>\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/post']\">Post-Tweet</button>\n                </li>\n                <li class=\"nav-item mx-3\" routerLinkActive=\"active\">\n                    <button class=\"nav-link btn shadow-none\" [routerLink]=\"['/users']\">All-Users</button>\n                </li>\n                <li class=\"nav-item mx-3\"> <button class=\"btn logout-btn my-2 my-sm-0 shadow-none\" [routerLink]=\"['/login']\" (click)=\"logout()\" type=\"button\">Logout <i class=\"ml-2 bi bi-box-arrow-right\"></i></button>\n                </li>\n            </ul>\n        </div>\n\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Tweet } from 'src/app/model/tweet.model';\nimport { formatDate, LocationStrategy } from '@angular/common';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\n\n@Component({\n  selector: 'app-post-tweets-page',\n  templateUrl: './post-tweets-page.component.html',\n  styleUrls: ['./post-tweets-page.component.css']\n})\nexport class PostTweetsPageComponent implements OnInit {\n  \n  myFormGroup : FormGroup;\n  remainingTweetLength : number;\n  remainingTagLength : number;\n  tweetLengthExceeded : boolean = false;\n  tagLengthExceeded : boolean = false;\n  showTweetLength : boolean = false;\n  showTagLength : boolean = false;\n  showTweetRed : boolean = false;\n  showTagRed : boolean = false;\n  tweetEmpty : boolean = false;\n  showElement : boolean = false;\n\n  tweet : Array<Tweet>;\n\n  userName : string;\n  firstName : string;\n  lastName : string;\n  today= new Date();\n  todaysDataTime = '';\n\n  constructor(public router : Router, formBuilder : FormBuilder , public postTweetService : TweetsService) { \n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530')\n    this.myFormGroup=formBuilder.group({\n      \"tweet\" : new FormControl(\"\",Validators.required),\n      \"tag\" : new FormControl(\"\"),\n    })\n  }\n\n  postTweet(){\n    // console.log(\"post called\");\n    let tweet = this.myFormGroup.controls['tweet'].value;\n    \n    if(tweet.length == 0){\n      this.tweetEmpty = true;\n    }\n    else{\n      \n      // creating a tweet\n      // sessionStorage.getItem need to be used for getting user name\n      let newTweet = new Tweet(\n                            sessionStorage.getItem('user'),\n                            this.myFormGroup.controls['tweet'].value,\n                            sessionStorage.getItem('firstName'),\n                            sessionStorage.getItem('lastName'),\n                            this.todaysDataTime\n                            )\n      \n      // calling tweet service for uploading tweet \n\n      this.postTweetService.postTweet(newTweet).subscribe((response : Response)=>{\n        // console.log(response);\n        //console.log(response.text()); \n      });\n  \n      // console.log(this.myFormGroup.controls['tweet'].value);\n      this.showElement = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.showElement = false;\n        }.bind(this), 3000);\n      this.myFormGroup.controls['tweet'].reset();\n    //  this.myFormGroup.controls['tag'].reset();\n      this.showTweetLength = false;\n      //this.showTagLength = false;\n    }\n    \n  }\n\n  tweetLengthValidationMethod(){\n    \n    let tweet = this.myFormGroup.controls['tweet'].value;\n    if(tweet.length!=0){\n      this.tweetEmpty = false;\n      this.showTweetLength = true;\n      this.remainingTweetLength = 145 - tweet.length ;\n    }\n    else{\n      this.showTweetLength = false\n    }\n\n    if(tweet.length>=145 && tweet.length!=0){\n      this.showTweetRed = true;\n      this.tweetLengthExceeded = true;\n      \n    }else{\n      \n      this.tweetLengthExceeded = false;\n      this.showTweetRed = false;\n    }\n  }\n\n\n\n\n  // tagLengthValidationMethod(){\n    \n  //   let tag = this.myFormGroup.controls['tag'].value;\n    \n  //   if(tag.length!=0){\n  //     this.showTagLength = true;\n  //     this.remainingTagLength = 50 - tag.length;\n  //  }\n  //  else{\n  //    this.showTagLength = false;\n  //  }\n  //   if(tag.length>=50 && tag.length!=0){\n  //     this.tagLengthExceeded = true;\n  //     this.showTagRed = true;\n  //   }else{\n  //     this.tagLengthExceeded = false;\n  //     this.showTagRed = false;\n  //   }\n  // }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div class=\"container px-1 px-md-5 px-lg-1 px-xl-5 mt-4 py-5 mx-auto\">\n\n    <div *ngIf=\"showElement\" class=\" msg mt-1\">\n        <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>Tweeted!</strong>\n        </div>\n    </div>\n\n    <div class=\"wrapper d-flex flex-column\">\n        <h3 class=\"text-center\">Post your tweet</h3>\n\n\n        <form class=\"formgroup\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"postTweet()\">\n            <div class=\"text-center\">\n                <p *ngIf=\"tweetEmpty\"><b class=\"text-danger\">Tweet</b> can't be empty !</p>\n            </div>\n\n            <label class=\"mb-1 mt-3\" for=\"textarea\">                                \n                        <h6 class=\"font-weight-bolder\">Tweet Description <i class=\"bi bi-pencil font-weight-bolder\"></i></h6>\n                    </label>\n\n            <textarea class=\"mb-0 form-control\" id=\"textarea\" name=\"textarea\" [formControl]=\"myFormGroup.controls['tweet']\" (keyup)=\"tweetLengthValidationMethod()\" placeholder=\"Should less than 145 characters!!\" maxlength=\"145\" rows=\"3\"></textarea>\n\n            <div *ngIf=\"showTweetLength\">\n                <p *ngIf=\"showTweetRed\"><b class=\"text-danger\">145 </b> characters length completed</p>\n                <p *ngIf=\"!showTweetRed\"><b>{{remainingTweetLength}} </b>characters remaining!!</p>\n            </div>\n\n            <button class=\"btn float-right button-post mt-3\" type=\"submit\">Post Tweet</button>\n\n        </form>\n\n    </div>\n</div>\n\n\n<app-footer></app-footer>","import { formatDate, LocationStrategy } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommentsList } from 'src/app/model/commentsList.model';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\n\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\n\nexport class UserProfileComponent implements OnInit {\n  myFormGroup: FormGroup;\n  today = new Date();\n  todaysDataTime = '';\n  clickedReplyButton: { [key: number]: boolean } = {};\n  enableLikeButton: { [key: number]: boolean } = {};\n  enablePostButton: boolean = false;\n  showElement: boolean = false;\n  tweets: TweetResponse[];\n  singleTweet: TweetResponse;\n  commentList: Array<CommentsList>;\n  noTweets: boolean = false;\n  obj: Object;\n  tweetTex: string;\n  tweetEmpty: boolean = false;\n  showTweetLength: boolean = false;\n  remainingTweetLength: number;\n  showTweetRed: boolean = false;\n  tweetLengthExceeded: boolean = false;\n  showModel: boolean = false;\n  deleteTweetPopup: boolean = false;\n  likedTweetPopup: boolean = false;\n  updateTweetPopup: boolean = false;\n  disLikedTweetPopup: boolean = false;\n  userDetail:UserModel;\n  firstName:string;\n  lastName:string;\n  email:string;\n  contact:string;\n\n  loggedInUser = sessionStorage.getItem('user');\n  // noComments : {[key: number] : boolean} ={};\n\n  constructor(formBuilder: FormBuilder, private locationStrategy: LocationStrategy, public tweetService: TweetsService, public router: Router) {\n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530');\n    this.myFormGroup = formBuilder.group({\n      \"reply\": new FormControl(\"\", Validators.required),\n    })\n  }\n\n  showTweets() {\n    this.tweetService.getAllTweetsOfUser(this.loggedInUser).subscribe(response => {\n\n      this.tweets = response;\n      for (let res of response) {\n        if (res.username === this.loggedInUser) {\n          this.tweets = this.tweets.filter(res => res.username === this.loggedInUser);\n        }\n      }\n      if (this.tweets.length != 0) {\n        this.noTweets = false;\n      } else {\n        this.noTweets = true;\n      }\n\n    });\n  }\n\n  userDetails() {\n    this.tweetService.userDetails(this.loggedInUser).subscribe(response =>{\n      this.userDetail=response;\n      this.firstName = this.userDetail.firstName;\n      this.lastName = this.userDetail.lastName;\n      this.email = this.userDetail.username;\n      this.contact = this.userDetail.contactNum;\n\n    });\n  } deleteTweet(id: string) {\n    this.tweetService.deleteTweet(id).subscribe(response => {\n      this.tweetService.getAllTweetsOfUser(this.loggedInUser).subscribe(response => {\n        this.tweets = response;\n        this.deleteTweetPopup = true;\n        setTimeout(function () {\n          this.deleteTweetPopup = false;\n        }.bind(this), 3000);\n        if (this.tweets.length != 0) {\n          this.noTweets = false;\n        } else {\n          this.noTweets = true;\n        }\n      },\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n    });\n  }\n\n  editTweet(id: string) {\n    this.showModel = true;\n    this.tweetService.editTweet(id).subscribe((response: TweetResponse) => {\n      this.singleTweet = response;\n      this.tweetTex = this.singleTweet.tweetText;\n    })\n  }\n\n  tweetLengthValidationMethod(tweetOfUser: HTMLInputElement) {\n\n    let tweet = tweetOfUser.value;\n    if (tweet.length != 0) {\n      this.tweetEmpty = false;\n      this.showTweetLength = true;\n      this.remainingTweetLength = 145 - tweet.length;\n    }\n    else {\n      this.showTweetLength = false\n    }\n\n    if (tweet.length >= 145 && tweet.length != 0) {\n      this.showTweetRed = true;\n      this.tweetLengthExceeded = true;\n\n    } else {\n\n      this.tweetLengthExceeded = false;\n      this.showTweetRed = false;\n    }\n  }\n\n\n  updateTweet(tweet: HTMLInputElement, id: string) {\n    if (tweet.value.length == 0) {\n      this.tweetEmpty = true\n    }\n    else {\n      this.tweetEmpty = false;\n    }\n    this.tweetService.updateTweet(id, tweet.value).subscribe((response) => {\n      if (response == \"success\") {\n        setTimeout(function () {\n          this.updateTweetPopup = true;\n          this.updateTweetPopup = false;\n        }.bind(this), 3000);\n        this.showModel = false;\n        this.showTweets();\n        this.closeUpdateTweet(tweet);\n      }\n    },\n      // failure function\n      failureData => {\n        // console.log(failureData);\n      });\n  }\n\n  closeUpdateTweet(tweet: HTMLInputElement) {\n    tweet.value = '';\n    this.showModel = false;\n    this.showTweetLength = false;\n  }\n\n  likeTweet(id: string) {\n    this.tweetService.likeTweet(id).subscribe((response) => {\n      if (response == \"success\") {\n        this.showTweets();\n        this.likedTweetPopup = true;\n        setTimeout(function () {\n          this.likedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n      // failure function\n      failureData => {\n        // console.log(failureData);\n      });\n  }\n\n  disLikeTweet(id: string) {\n    this.tweetService.disLikeTweet(id).subscribe((response) => {\n      if (response == \"success\") {\n        this.showTweets();\n        this.disLikedTweetPopup = true;\n        setTimeout(function () {\n          this.disLikedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n      // failure function\n      failureData => {\n        // console.log(failureData);\n      });\n  }\n\n\n  modelshow() {\n    if (this.showModel = false) {\n      this.showModel = true\n    } else {\n      this.showModel = false\n    }\n  }\n\n\n\n  replyTweet(id: string) {\n    let reply = this.myFormGroup.controls['reply'].value;\n    if (reply.length == 0) {\n      alert(\"Reply can't be empty\");\n    }\n    else {\n      this.tweetService.replyTweet(reply, id).subscribe((response => {\n        if (response == \"success\") {\n          this.myFormGroup.controls['reply'].reset();\n          this.showElement = true;\n          this.showTweets();\n          setTimeout(function () {\n            this.showElement = false;\n          }.bind(this), 3000);\n        }\n\n      }),\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n\n    }\n  }\n\n\n  showButton() {\n    let reply = this.myFormGroup.controls['reply'].value;\n    if (reply.length == 0) {\n      this.enablePostButton = false;\n    } else {\n      this.enablePostButton = true;\n    }\n  }\n\n  preventBackButton() {\n    history.pushState(null, null, location.href);\n    this.locationStrategy.onPopState(() => {\n      history.pushState(null, null, location.href);\n    })\n  }\n\n  openSite(siteUrl) {\n    window.open(\"//\" + siteUrl, '_blank');\n  }\n\n  isReplyClicked(index: number) {\n    if (this.clickedReplyButton[index] == false) {\n      this.clickedReplyButton[index] = true;\n    }\n    else\n      this.clickedReplyButton[index] = false;\n  }\n\n\n  ngOnInit(): void {\n    this.preventBackButton();\n    this.showTweets();\n    this.userDetails();\n    // setInterval(()=>{\n    //   // console.log(\"called set interval\");\n    //   this.showTweets();\n    // },5000) \n  }\n\n}\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div *ngIf=\"showElement\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Commented!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"likedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Liked!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"disLikedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <strong>DisLiked!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"deleteTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <strong>Deleted!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"updateTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Updated!</strong>\n    </div>\n</div>\n\n<div class=\"container mt-4\">\n    <div *ngIf=\"noTweets\" class=\"py-3 mt-4\" style=\"text-align: center;\">\n        <h3 class=\"mt-4\">You have no tweets to display!!</h3>\n        <a [routerLink]=\"['/post']\">Post your first tweet :)</a>\n    </div>\n\n    <div class=\"wrapper-profile d-flex \">\n        <div class=\"col-3 align-self-center\">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" alt=\" twitter-logo\">\n        </div>\n        <div class=\"col-9 align-self-center\">\n            <div class=\"mt-2 pe-5 name\"> <b>Full Name: </b>{{firstName}} {{lastName}} </div>\n            <div class=\"mt-2 pe-5 name\"> <b>Email: </b>{{email}} </div>\n            <div class=\"mt-2 pe-5  name\"><b>Contact No: </b> {{contact}}</div>\n        </div>\n    </div>\n    <!-- card to display -->\n    <div class=\"wrapper\" *ngFor=\"let tweet of tweets; index as i;\">\n\n        <div class=\"top-section d-flex justify-content-between me-2\">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" alt=\" twitter-logo\">\n            <div class=\"text-center mt-2 pe-5 align-self-center name\"> {{tweet.firstName}} {{tweet.lastName}} </div>\n            <div class=\"text-center pe-5 align-self-center tweetDate\"> {{tweet.tweetDate}} </div>\n\n\n            <div class=\"col-1 dropdown\">\n\n                <button class=\"btn dropdown shadow-none\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n                        <i class=\"bi bi-three-dots-vertical text-primary\"></i>\n                </button>\n\n                <ul class=\"bg-light dropdown-menu dropend\" aria-labelledby=\"dropdownMenuButton\">\n\n                    <li (click)=\"deleteTweet(tweet.tweetId)\" class=\"del dropdown-item text-center\">Delete\n                        <i class=\"ml-3 bi bi-trash\"></i>\n                    </li>\n                    <li>\n                        <hr class=\"dropdown-divider bg-dark\">\n                    </li>\n                    <li (click)=\"editTweet(tweet.tweetId)\" class=\"edit dropdown-item text-center\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">Edit\n                        <i class=\"ml-3 bi bi-pencil-fill\">\n                        </i>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\"mid-section d-flex ps-4 pe-4 mt-4\">\n            <p class=\"post-content text-justify text-dark\"> {{tweet.tweetText}}\n            </p>\n        </div>\n\n        <div class=\"bottom-section d-flex justify-content-around ps-4 mt-2\">\n\n            <span *ngIf=\"!tweet.likeStatus\" class=\"col-4\" (click)=\"likeTweet(tweet.tweetId)\"><i class=\"bi bi-heart text-primary\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <span *ngIf=\"tweet.likeStatus\" (click)=\"disLikeTweet(tweet.tweetId)\" class=\"col-4\"><i\n                class=\"bi bi-heart-fill text-danger\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <button class=\"btn col-4 shadow-none\"><i (click)=\"isReplyClicked(i)\"\n                class=\"bi bi-chat-left-text text-primary\" ></i>&nbsp; {{tweet.commentsCount}}</button>\n        </div>\n\n        <hr class=\"divider bg-dark\" *ngIf=\"clickedReplyButton[i]\">\n        <label class=\"font-weight-bold\" *ngIf=\"clickedReplyButton[i]\">Replies</label>\n\n        <div *ngIf=\"clickedReplyButton[i] \" class=\"scroll mt-3 p-2\">\n            <div *ngFor=\"let com of tweet.comments\" class=\"comments-section row d-flex flex-column justify-content-around\">\n                <h6 class=\"ml-2 col\">\n                    {{com.username}}\n                </h6>\n                <p class=\"ml-2 col border-bottom border-dark\">{{com.comment}}</p>\n            </div>\n        </div>\n\n\n        <hr *ngIf=\"clickedReplyButton[i]\" />\n        <form class=\"formgroup \" *ngIf=\"clickedReplyButton[i]\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"replyTweet(tweet.tweetId)\">\n\n            <textarea class=\"mb-1 form-control\" id=\"textarea\" [formControl]=\"myFormGroup.controls['reply']\" placeholder=\"Write your comment, it should less than 144 characters!!\" name=\"reply\" maxlength=\"144\" rows=\"3\"></textarea>\n            <button class=\"btn comment-button  me-2 mt-3\" type=\"submit\">comment</button>\n        </form>\n\n    </div>\n    <app-scroll-top></app-scroll-top>\n\n\n    <!-- Modal -->\n    <div *ngIf=\"showModel\">\n        <div *ngIf=\"showModel\" class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div class=\"modal-content wrapper-modal\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Update Tweet</h5>\n                    </div>\n                    <div class=\"text-center\">\n                        <p *ngIf=\"tweetEmpty\" class=\"text-danger\">Tweet can't be empty !</p>\n                    </div>\n                    <div class=\"modal-body\">\n                        <textarea #textarea (keyup)=\"tweetLengthValidationMethod(textarea)\" id=\"textarea\" maxlength=\"145\" name=\"textarea\" rows=\"3\">{{tweetTex}}</textarea>\n                        <div *ngIf=\"showTweetLength\">\n                            <p *ngIf=\"showTweetRed\"><b class=\"text-danger\">145 </b> characters length completed</p>\n                            <p *ngIf=\"!showTweetRed\"><b>{{remainingTweetLength}} </b>characters remaining!!</p>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn comment-close\" (click)=\"closeUpdateTweet(textarea) \" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" class=\"btn comment-button\" [disabled]=\"tweetEmpty\" (click)=\"updateTweet(textarea, singleTweet.tweetId)\" data-dismiss=\"modal\">Save changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n<app-footer></app-footer>","import { DOCUMENT } from '@angular/common';\nimport { Component, HostListener, Inject, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-scroll-top',\n  templateUrl: './scroll-top.component.html',\n  styleUrls: ['./scroll-top.component.css']\n})\nexport class ScrollTopComponent implements OnInit {\n  windowScrolled: boolean;\n  constructor(@Inject(DOCUMENT) private document: Document) { }\n  @HostListener(\"window:scroll\", [])\n  onWindowScroll() {\n      if (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop > 100) {\n          this.windowScrolled = true;\n      } \n     else if (this.windowScrolled && window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop < 10) {\n          this.windowScrolled = false;\n      }\n  }\n  scrollToTop() {\n      (function smoothscroll() {\n          var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;\n          if (currentScroll > 0) {\n              window.requestAnimationFrame(smoothscroll);\n              window.scrollTo(0, currentScroll - (currentScroll / 8));\n          }\n      })();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"scroll-to-top\" [ngClass]=\"{'show-scrollTop': windowScrolled}\">\n    <button type=\"button\" class=\"btn active shadow-none text-info\" data-toggle=\"button\" aria-pressed=\"true\" (click)=\"scrollToTop()\">\n        <i class=\"bi bi-arrow-up-circle-fill\"></i>\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserModel } from 'src/app/model/UserModel.model';\nimport { UserRegistrationService } from 'src/app/services/user-registration/user-registration.service';\n\n@Component({\n  selector: 'app-view-users-page',\n  templateUrl: './view-users-page.component.html',\n  styleUrls: ['./view-users-page.component.css']\n})\nexport class ViewUsersPageComponent implements OnInit {\n\n  myFormGroup: FormGroup;\n  showSearchedText: boolean = false;\n  searchedText: string;\n  flag: boolean = false;\n  enableButtonForSearch: boolean = false;\n  userModel: UserModel[];\n  noUsersToDisplay: boolean = false;\n  constructor(formBuilder: FormBuilder, public userService: UserRegistrationService, public router: Router) {\n    this.myFormGroup = formBuilder.group({\n      \"search\": new FormControl(\"\", Validators.required),\n    })\n  }\n\n  // enable search button\n\n  enableSearchButton() {\n    let enteredUserName = this.myFormGroup.controls['search'].value;\n    if (enteredUserName.length > 0) {\n      // this.noUsersToDisplay = false;\n      this.enableButtonForSearch = true;\n    } else {\n      this.enableButtonForSearch = false;\n    }\n\n  }\n\n  //search for user\n\n  search() {\n    // console.log(\"called search\")\n    let enteredUserName = this.myFormGroup.controls['search'].value;\n    if (enteredUserName.length > 0) {\n      this.userService.searchUser(enteredUserName).subscribe(response => {\n        let currentUser = sessionStorage.getItem('user');\n        this.userModel = response;\n        console.log(this.userModel);\n        for (let res of response) {\n          if (res.username.includes(enteredUserName)) {\n            this.userModel = this.userModel.filter(res => res.username.includes(enteredUserName));\n            console.log(this.userModel);\n          }\n        }\n        if(this.userModel.length==0){\n          this.noUsersToDisplay = true;\n        }else{\n          this.noUsersToDisplay = false;\n        }\n      })\n\n      this.showSearchedText = true;\n      this.searchedText = enteredUserName;\n      this.myFormGroup.controls['search'].reset();\n      this.enableButtonForSearch = false;\n    }\n    else {\n      this.showSearchedText = false;\n    }\n    // console.log(enteredUserName);\n  }\n\n  getDetails(username: string) {\n    // console.log(username);\n    this.router.navigate(['/user-tweets/' + username]);\n  }\n\n\n  ngOnInit(): void {\n    if (this.enableButtonForSearch) {\n      this.search();\n    } else {\n      this.userService.getAllUsers().subscribe(response => {\n        // this.userModel = response;\n        let currentUser = sessionStorage.getItem('user');\n        this.userModel = response;\n        for (let res of response) {\n          if (res.username != currentUser) {\n            this.userModel = this.userModel.filter(res => res.username !== currentUser);\n            // console.log(this.userModel);\n          }\n        }\n        if (this.userModel.length == 0) {\n          this.noUsersToDisplay = true;\n        } else {\n          this.noUsersToDisplay = false;\n        }\n        // console.log(this.userModel);\n      })\n    }\n\n  }\n\n}\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div class=\"container\">\n    <div class=\"bg-light py-3 mt-4\" style=\"text-align: center;\">\n        <h3 style=\"font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\">Users</h3>\n\n    </div>\n    <form [formGroup]=\"myFormGroup\" class=\"form-inline mt-4 mb-4 mr-auto\" (ngSubmit)=\"search()\">\n        <input class=\"form-control search-input mr-auto shadow-none\" type=\"search\" (keyup)=\"enableSearchButton()\" [formControl]=\"myFormGroup.controls['search']\" placeholder=\"Search User\" aria-label=\"Search\">\n        <button *ngIf=\"!enableButtonForSearch\" class=\"btn search btn-secondary mr-1\" disabled type=\"submit\"><b class=\"search-text\">Search</b><i class=\"ml-1 bi bi-search\"></i></button>\n        <button *ngIf=\"enableButtonForSearch\" class=\"btn search mr-1\" type=\"submit\"><b class=\"search-text\">Search</b><i class=\"ml-1 bi bi-search\"></i></button>\n    </form>\n    <p *ngIf=\"showSearchedText\">You have searched for : <b>{{searchedText}}</b></p>\n    <div class=\"table-responsvie\">\n\n        <table class=\"table table-bordered table-hover text-center mb-5\">\n\n            <thead class=\"table-primary mb-5\">\n                <tr>\n                    <th>#</th>\n                    <th>Email/Username</th>\n                    <th>Name</th>\n                    <th>View Tweets</th>\n                </tr>\n            </thead>\n\n            <tbody *ngFor=\"let names of userModel; index as i\">\n                <tr class=\"wrapper\">\n                    <th scope=\"row\">{{i+1}}</th>\n                    <td>{{names.username}}</td>\n                    <td>{{names.firstName}} {{names.lastName}}</td>\n                    <td>\n                        <button type=\"button\" class=\"btn button\" (click)=\"getDetails(names.username)\">\n                view tweets</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngIf=\"noUsersToDisplay\" class=\"row text-center\">\n        <h3 class=\"col-12\">No users found with username {{searchedText}}!!</h3>\n    </div>\n    <app-scroll-top></app-scroll-top>\n\n</div>\n<app-footer class=\"footer\"></app-footer>","import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TweetResponse } from 'src/app/model/tweetResponse.model';\nimport { TweetsService } from 'src/app/services/tweets/tweets.service';\n\n@Component({\n  selector: 'app-view-users-tweets',\n  templateUrl: './view-users-tweets.component.html',\n  styleUrls: ['./view-users-tweets.component.css']\n})\nexport class ViewUsersTweetsComponent implements OnInit {\n  \n  myFormGroup : FormGroup;\n  today= new Date();\n  todaysDataTime = '';\n  clickedReplyButton : {[key: number] : boolean} ={};\n  enablePostButton : boolean = false;\n  showElement : boolean = false;\n  searchedUserTweets : string;\n  tweets : TweetResponse[];\n  returnedTweets : TweetResponse[];\n  noTweets : boolean = false;\n  likedTweetPopup : boolean = false;\n  disLikedTweetPopup : boolean = false;\n\n  constructor(formBuilder : FormBuilder, public activeRoute : ActivatedRoute , public tweetService : TweetsService) {\n    this.todaysDataTime = formatDate(this.today, 'dd-MM-yyyy', 'en-US', '+0530');\n    this.myFormGroup=formBuilder.group({\n      \"reply\" : new FormControl(\"\",Validators.required),\n    })\n\n  }\n\n  likeTweet(id : string){\n    // console.log(id);\n    this.tweetService.likeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.likedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.likedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n  \n  disLikeTweet(id : string){\n    // console.log(id);\n    this.tweetService.disLikeTweet(id).subscribe((response)=>{\n      // console.log(response);\n      if(response == \"success\"){\n        this.getAllTweets();\n        this.disLikedTweetPopup = true;\n        setTimeout(function() {\n          // console.log('hide');\n          this.disLikedTweetPopup = false;\n        }.bind(this), 3000);\n      }\n    },\n    // failure function\n    failureData => {\n      // console.log(failureData);\n    });\n  }\n\n\n  isReplyClicked(index : number){\n    // console.log(index);\n    if(this.clickedReplyButton[index]==false){\n    this.clickedReplyButton[index] = true;\n  }\n    else\n    this.clickedReplyButton[index] = false;\n  }\n\n\n  replyTweet(id : string){\n    let reply = this.myFormGroup.controls['reply'].value;\n    if(reply.length==0){\n      alert(\"Reply can't be empty\");\n    }\n    else{\n        // alert(\"commented!\");\n        //console.log(id)\n        this.tweetService.replyTweet(reply,id).subscribe((response=>{\n          // console.log(response);\n          if(response==\"success\"){\n            this.myFormGroup.controls['reply'].reset();\n            this.showElement = true;\n            this.getAllTweets();\n            setTimeout(function() {\n              // console.log('hide');\n              this.showElement = false;\n            }.bind(this), 3000);\n          }\n          \n        }),\n        // failure function\n        failureData => {\n          // console.log(failureData);\n        });\n        \n      }\n    }\n  \n  getAllTweets(){\n    this.activeRoute.params.subscribe((parameter => this.searchedUserTweets = parameter[\"username\"]));\n     console.log(this.searchedUserTweets);  \n    this.tweetService.getAllTweetsOfUser(this.searchedUserTweets).subscribe(response =>{\n      let currentUser =  sessionStorage.getItem('user');\n      this.returnedTweets = response;\n      console.log(this.returnedTweets);\n      console.log(currentUser);\n      this.tweets = response;\n      for(let res of response){\n        if(res.username != currentUser){\n          this.tweets = this.tweets.filter(res => res.username=== this.searchedUserTweets);\n           console.log(this.tweets);\n        }\n      }\n         console.log(this.tweets);\n        if(this.tweets.length!=0){\n          this.noTweets = false;\n        }else{\n          this.noTweets = true;\n        }        \n      });  \n  }\n  \n  showButton(){\n    let reply = this.myFormGroup.controls['reply'].value;\n    // console.log(reply);\n    if(reply.length==0){\n      this.enablePostButton = false;\n    }else{\n      this.enablePostButton = true;\n    }\n  }\n\n\n  ngOnInit(): void {\n      this.getAllTweets();\n      // setInterval(()=>{\n      //   // console.log(\"called set interval\");\n      //   this.getAllTweets();\n      // },5000) \n    }    \n  }\n","<app-nav-bar class=\"top\"></app-nav-bar>\n\n<div *ngIf=\"showElement\" class=\"msg mt-1\" style=\"text-align: center;\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Commented!</strong>\n    </div>\n</div>\n\n<div *ngIf=\"likedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>Liked!</strong>\n    </div>\n</div>\n<div *ngIf=\"disLikedTweetPopup\" class=\" msg mt-1\">\n    <div id=\"alert-dismissible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <strong>DisLiked!</strong>\n    </div>\n</div>\n\n<div class=\"container mt-4\">\n    <div class=\"bg-light py-3 mt-4\" style=\"text-align: center;\">\n        <p>Showing tweets of</p>\n        <h3 style=\"font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\">{{searchedUserTweets}}\n        </h3>\n        <a *ngIf=\"!noTweets\" [routerLink]=\"['/users']\">Go back to search users ?</a>\n    </div>\n\n    <div *ngIf=\"noTweets\" class=\"py-3 mt-4\" style=\"text-align: center;\">\n        <h3 class=\"mt-4\">User has no tweets to display!!</h3>\n        <a [routerLink]=\"['/users']\">Go back to search users ?</a>\n    </div>\n\n    <!-- card to display -->\n    <div class=\"wrapper\" *ngFor=\"let tweet of tweets; index as i\">\n\n\n        <div class=\"top-section d-flex justify-content-between me-2\">\n            <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" alt=\" twitter-logo\">\n            <div class=\"text-center mt-2 pe-5 align-self-center name\"> {{tweet.firstName}} {{tweet.lastName}} </div>\n            <div class=\"text-center pe-5 align-self-center tweetDate\"> {{tweet.tweetDate}} </div>\n\n        </div>\n        <div class=\"mid-section d-flex ps-4 pe-4 mt-4\">\n            <p class=\"post-content text-justify text-dark\"> {{tweet.tweetText}}\n            </p>\n        </div>\n        <div class=\"bottom-section d-flex justify-content-around ps-4 mt-2\">\n\n            <span *ngIf=\"!tweet.likeStatus\" class=\"col-4\" (click)=\"likeTweet(tweet.tweetId)\"><i class=\"bi bi-heart text-primary\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <span *ngIf=\"tweet.likeStatus\" (click)=\"disLikeTweet(tweet.tweetId)\" class=\"col-4\"><i\n                class=\"bi bi-heart-fill text-danger\"></i>&nbsp;{{tweet.likesCount}}</span>\n\n            <button class=\"btn col-4 shadow-none\"><i (click)=\"isReplyClicked(i)\"\n                class=\"bi bi-chat-left-text text-primary\" ></i>&nbsp; {{tweet.commentsCount}}</button>\n        </div>\n\n        <hr class=\"divider bg-dark\" *ngIf=\"clickedReplyButton[i]\">\n        <label class=\"font-weight-bold\" *ngIf=\"clickedReplyButton[i]\">Replies</label>\n\n        <div *ngIf=\"clickedReplyButton[i] \" class=\"scroll mt-3 p-2\">\n            <div *ngFor=\"let com of tweet.comments\" class=\"comments-section row d-flex flex-column justify-content-around\">\n                <h6 class=\"ml-2 col\">\n                    {{com.username}}\n                </h6>\n                <p class=\"ml-2 col border-bottom border-dark\">{{com.comment}}</p>\n            </div>\n        </div>\n\n\n        <hr *ngIf=\"clickedReplyButton[i]\" />\n        <form class=\"formgroup \" *ngIf=\"clickedReplyButton[i]\" [formGroup]=\"myFormGroup\" (ngSubmit)=\"replyTweet(tweet.tweetId)\">\n\n            <textarea class=\"mb-1 form-control\" id=\"textarea\" [formControl]=\"myFormGroup.controls['reply']\" placeholder=\"Write your comment, it should less than 144 characters!!\" name=\"reply\" maxlength=\"144\" rows=\"3\"></textarea>\n            <button class=\"btn comment-button  me-2 mt-3\" type=\"submit\">comment</button>\n        </form>\n\n    </div>\n\n    <app-scroll-top></app-scroll-top>\n</div>\n\n\n\n<app-footer></app-footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"],"sourceRoot":"webpack:///"}